<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="3.0.0">
  <Settings>
    <Param name="Completed URL" updates="None" val="" valType="str"/>
    <Param name="Data filename" updates="None" val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code"/>
    <Param name="Enable Escape" updates="None" val="True" valType="bool"/>
    <Param name="Experiment info" updates="None" val="{'gender': '', 'age': '', 'language': '', 'participant': '001'}" valType="code"/>
    <Param name="Force stereo" updates="None" val="True" valType="bool"/>
    <Param name="Full-screen window" updates="None" val="True" valType="bool"/>
    <Param name="HTML path" updates="None" val="html" valType="str"/>
    <Param name="Incomplete URL" updates="None" val="" valType="str"/>
    <Param name="JS libs" updates="None" val="packaged" valType="str"/>
    <Param name="Monitor" updates="None" val="testMonitor" valType="str"/>
    <Param name="Save csv file" updates="None" val="False" valType="bool"/>
    <Param name="Save excel file" updates="None" val="False" valType="bool"/>
    <Param name="Save log file" updates="None" val="True" valType="bool"/>
    <Param name="Save psydat file" updates="None" val="True" valType="bool"/>
    <Param name="Save wide csv file" updates="None" val="True" valType="bool"/>
    <Param name="Screen" updates="None" val="1" valType="num"/>
    <Param name="Show info dlg" updates="None" val="False" valType="bool"/>
    <Param name="Show mouse" updates="None" val="False" valType="bool"/>
    <Param name="Units" updates="None" val="use prefs" valType="str"/>
    <Param name="Use version" updates="None" val="" valType="str"/>
    <Param name="Window size (pixels)" updates="None" val="[1920, 1080]" valType="code"/>
    <Param name="blendMode" updates="None" val="avg" valType="str"/>
    <Param name="color" updates="None" val="$[1.000,1.000,1.000]" valType="str"/>
    <Param name="colorSpace" updates="None" val="rgb" valType="str"/>
    <Param name="expName" updates="None" val="experiment2_b" valType="str"/>
    <Param name="exportHTML" updates="None" val="on Sync" valType="str"/>
    <Param name="logging level" updates="None" val="exp" valType="code"/>
  </Settings>
  <Routines>
    <Routine name="Instruction_Intro">
      <KeyboardComponent name="key_resp_1">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_1" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <ImageComponent name="lub">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="Images/Instruction_Screen.png" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="lub" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="size" updates="constant" val="(2, 2)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
    </Routine>
    <Routine name="Exposure">
      <ImageComponent name="Sing_img">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$trig_img" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="Sing_img" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.2)" valType="code"/>
        <Param name="size" updates="constant" val="" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="3" valType="code"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <ImageComponent name="Pl_img">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$targ_img" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="Pl_img" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.2)" valType="code"/>
        <Param name="size" updates="constant" val="" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="3" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="3" valType="code"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <TextComponent name="Sing_txt">
        <Param name="color" updates="constant" val="$[1.000,-1.000,-1.000]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.3" valType="code"/>
        <Param name="name" updates="None" val="Sing_txt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.6)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="3" valType="code"/>
        <Param name="text" updates="set every repeat" val="$trig" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="Pl_txt">
        <Param name="color" updates="constant" val="$[1.000,-1.000,-1.000]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.3" valType="code"/>
        <Param name="name" updates="None" val="Pl_txt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.6)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="3" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="3" valType="code"/>
        <Param name="text" updates="set every repeat" val="$targ" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="Instruction_Prod">
      <ImageComponent name="image_3">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="Images/Instruction_Screen_Prod.png" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="image_3" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="size" updates="constant" val="(2, 2)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp_2">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_2" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Test_Prod">
      <TextComponent name="Target_ins1">
        <Param name="color" updates="constant" val="$[-1.000,-1.000,-1.000]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="Target_ins1" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.85)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="text" updates="set every repeat" val="$instr" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <ImageComponent name="Trigger_img1">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$trig_img" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="Trigger_img1" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.2)" valType="code"/>
        <Param name="size" updates="constant" val="" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="5" valType="code"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <ImageComponent name="Target_img1">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$targ_img" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="Target_img1" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.2)" valType="code"/>
        <Param name="size" updates="constant" val="" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <TextComponent name="Trigger_txt1">
        <Param name="color" updates="constant" val="$[1.000,-1.000,-1.000]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.3" valType="code"/>
        <Param name="name" updates="None" val="Trigger_txt1" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.6)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="5" valType="code"/>
        <Param name="text" updates="set every repeat" val="$trig" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="textinput">
        <Param name="Begin Experiment" updates="constant" val="inputText = &quot;&quot;" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="theseKeys=&quot;&quot;&amp;#10;shift_flag = False&amp;#10;txtinp.alignHoriz ='center'" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="n= len(theseKeys)&amp;#10;i = 0&amp;#10;while i &lt; n:&amp;#10;&amp;#10;    if theseKeys[i] == 'return' and len(inputText) &gt;1:&amp;#10;        # pressing RETURN means time to stop&amp;#10;        continueRoutine = False&amp;#10;        break&amp;#10;&amp;#10;    elif theseKeys[i] == 'backspace':&amp;#10;        inputText = inputText[:-1]  # lose the final character&amp;#10;        i = i + 1&amp;#10;&amp;#10;    elif theseKeys[i] == 'space':&amp;#10;        inputText += ' '&amp;#10;        i = i + 1&amp;#10;&amp;#10;    elif theseKeys[i] in ['lshift', 'rshift']:&amp;#10;        shift_flag = True&amp;#10;        i = i + 1&amp;#10;&amp;#10;    else:&amp;#10;        if len(theseKeys[i]) == 1:&amp;#10;            # we only have 1 char so should be a normal key, &amp;#10;            # otherwise it might be 'ctrl' or similar so ignore it&amp;#10;            if shift_flag:&amp;#10;                inputText += chr( ord(theseKeys[i]) - ord(' '))&amp;#10;                shift_flag = False&amp;#10;            else:&amp;#10;                inputText += theseKeys[i]&amp;#10;&amp;#10;        i = i + 1&amp;#10;" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="# let's store the final text string into the results finle...&amp;#10;thisExp.addData('inputText', inputText)&amp;#10;inputText=&quot;&quot;" valType="extendedCode"/>
        <Param name="name" updates="None" val="textinput" valType="code"/>
      </CodeComponent>
      <TextComponent name="txtinp">
        <Param name="color" updates="constant" val="$[1.000,-1.000,-1.000]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.3" valType="code"/>
        <Param name="name" updates="None" val="txtinp" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.6)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="text" updates="set every frame" val="$inputText" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="text_resp">
        <Param name="allowedKeys" updates="constant" val="" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="name" updates="None" val="text_resp" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="all keys" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="ISI_1sec">
      <StaticComponent name="ISI_2">
        <Param name="code" updates="None" val="" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="name" updates="None" val="ISI_2" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="0.75" valType="code"/>
      </StaticComponent>
    </Routine>
    <Routine name="Instruction_FC">
      <ImageComponent name="image_6">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="Images/Instruction_Screen_FC.png" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="image_6" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="size" updates="constant" val="(2, 2)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp_4">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_4" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Test_FC">
      <TextComponent name="Target_ins2">
        <Param name="color" updates="constant" val="$[-1.000,-1.000,-1.000]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="Target_ins2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.85)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="4" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="text" updates="set every repeat" val="$instr" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <ImageComponent name="Trigger_img2">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$trig_img" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="Trigger_img2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.2)" valType="code"/>
        <Param name="size" updates="constant" val="" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="4" valType="code"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <ImageComponent name="Target_img2">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$targ_img" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="Target_img2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.2)" valType="code"/>
        <Param name="size" updates="constant" val="" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="4" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <TextComponent name="Trigger_txt2">
        <Param name="color" updates="constant" val="$[1.000,-1.000,-1.000]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.3" valType="code"/>
        <Param name="name" updates="None" val="Trigger_txt2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.6)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="4" valType="code"/>
        <Param name="text" updates="set every repeat" val="$trig" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="Target_instr_l">
        <Param name="color" updates="constant" val="$[-1.000,-1.000,-1.000]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>
        <Param name="name" updates="None" val="Target_instr_l" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(-0.5, -0.9)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="4" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="text" updates="constant" val="Press a&amp;#10;&amp;#10;" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="Target_instr_r">
        <Param name="color" updates="constant" val="$[-1.000,-1.000,-1.000]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>
        <Param name="name" updates="None" val="Target_instr_r" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.5, -0.8)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="4" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="text" updates="constant" val="Press k" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="FC_resp">
        <Param name="allowedKeys" updates="constant" val="'a','k'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="FC_resp" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="4" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="Resp_a">
        <Param name="color" updates="constant" val="$[1.000,-1.000,-1.000]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.3" valType="code"/>
        <Param name="name" updates="None" val="Resp_a" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(-0.5, -0.6)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="4" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="text" updates="set every repeat" val="$a" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="Resp_b">
        <Param name="color" updates="constant" val="$[1.000,-1.000,-1.000]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.3" valType="code"/>
        <Param name="name" updates="None" val="Resp_b" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.5, -0.6)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="4" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="text" updates="set every repeat" val="$k" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="Exposure_2">
      <ImageComponent name="image">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$Picture" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="image" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="size" updates="constant" val="" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.0" valType="code"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
    </Routine>
    <Routine name="Exposure_3">
      <ImageComponent name="image_2">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$Picture_pl" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="image_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="size" updates="constant" val="" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.0" valType="code"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
    </Routine>
    <Routine name="ISI_Pre">
      <StaticComponent name="ISI">
        <Param name="code" updates="None" val="" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="name" updates="None" val="ISI" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1" valType="code"/>
      </StaticComponent>
      <PolygonComponent name="fixation">
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="$[-1.000,-1.000,-1.000]" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="nVertices" updates="constant" val="4" valType="int"/>
        <Param name="name" updates="None" val="fixation" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="shape" updates="constant" val="cross" valType="str"/>
        <Param name="size" updates="constant" val="(0.5, 0.5)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.0" valType="code"/>
        <Param name="units" updates="None" val="deg" valType="str"/>
      </PolygonComponent>
    </Routine>
    <Routine name="Thank_you">
      <TextComponent name="text">
        <Param name="color" updates="constant" val="$[-1.000,-1.000,-1.000]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="text" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="text" updates="constant" val="Thank you very much for participating!" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_3">
        <Param name="allowedKeys" updates="constant" val="'q'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="discard previous" updates="constant" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_3" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="nothing" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="Instruction_Intro"/>
    <Routine name="ISI_Pre"/>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="Selected rows" updates="None" val="0:3" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('trig', 'musab'), ('targ', 'musapu'), ('type', 'alt'), ('trig_img', 'Images/apple.jpg'), ('targ_img', 'Images/apple_pl.jpg'), ('final_c', 'b'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'larub'), ('targ', 'larupu'), ('type', 'alt'), ('trig_img', 'Images/rock.jpg'), ('targ_img', 'Images/rock_pl.jpg'), ('final_c', 'b'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'nalib'), ('targ', 'nalipu'), ('type', 'alt'), ('trig_img', 'Images/coin.jpg'), ('targ_img', 'Images/coin_pl.jpg'), ('final_c', 'b'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'milub'), ('targ', 'milupu'), ('type', 'alt'), ('trig_img', 'Images/soap.jpg'), ('targ_img', 'Images/soap_pl.jpg'), ('final_c', 'b'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'rumab'), ('targ', 'rumapu'), ('type', 'alt'), ('trig_img', 'Images/soldier.jpg'), ('targ_img', 'Images/soldier_pl.jpg'), ('final_c', 'b'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'nasab'), ('targ', 'nasapu'), ('type', 'alt'), ('trig_img', 'Images/spear.jpg'), ('targ_img', 'Images/spear_pl.jpg'), ('final_c', 'b'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'sanub'), ('targ', 'sanupu'), ('type', 'alt'), ('trig_img', 'Images/hammock.jpg'), ('targ_img', 'Images/hammock_pl.jpg'), ('final_c', 'b'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'minub'), ('targ', 'minupu'), ('type', 'alt'), ('trig_img', 'Images/raindrop.jpg'), ('targ_img', 'Images/raindrop_pl.jpg'), ('final_c', 'b'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'nimub'), ('targ', 'nimupu'), ('type', 'alt'), ('trig_img', 'Images/hand.jpg'), ('targ_img', 'Images/hand_pl.jpg'), ('final_c', 'b'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'rimab'), ('targ', 'rimapu'), ('type', 'alt'), ('trig_img', 'Images/bean.jpg'), ('targ_img', 'Images/bean_pl.jpg'), ('final_c', 'b'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'misab'), ('targ', 'misapu'), ('type', 'alt'), ('trig_img', 'Images/rainbow.jpg'), ('targ_img', 'Images/rainbow_pl.jpg'), ('final_c', 'b'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'rumud'), ('targ', 'rumutu'), ('type', 'alt'), ('trig_img', 'Images/river.jpg'), ('targ_img', 'Images/river_pl.jpg'), ('final_c', 'd'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'ranud'), ('targ', 'ranutu'), ('type', 'alt'), ('trig_img', 'Images/carpet.jpg'), ('targ_img', 'Images/carpet_pl.jpg'), ('final_c', 'd'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'lunid'), ('targ', 'lunitu'), ('type', 'alt'), ('trig_img', 'Images/ship.jpg'), ('targ_img', 'Images/ship_pl.jpg'), ('final_c', 'd'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'musad'), ('targ', 'musatu'), ('type', 'alt'), ('trig_img', 'Images/foot.jpg'), ('targ_img', 'Images/foot_pl.jpg'), ('final_c', 'd'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'nurad'), ('targ', 'nuratu'), ('type', 'alt'), ('trig_img', 'Images/copier.jpg'), ('targ_img', 'Images/copier_pl.jpg'), ('final_c', 'd'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'salid'), ('targ', 'salitu'), ('type', 'alt'), ('trig_img', 'Images/balloon.jpg'), ('targ_img', 'Images/balloon_pl.jpg'), ('final_c', 'd'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'milud'), ('targ', 'milutu'), ('type', 'alt'), ('trig_img', 'Images/banana.jpg'), ('targ_img', 'Images/banana_pl.jpg'), ('final_c', 'd'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'narid'), ('targ', 'naritu'), ('type', 'alt'), ('trig_img', 'Images/squid.jpg'), ('targ_img', 'Images/squid_pl.jpg'), ('final_c', 'd'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'lirid'), ('targ', 'liritu'), ('type', 'alt'), ('trig_img', 'Images/bridge.jpg'), ('targ_img', 'Images/bridge_pl.jpg'), ('final_c', 'd'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'masid'), ('targ', 'masitu'), ('type', 'alt'), ('trig_img', 'Images/thermometer.jpg'), ('targ_img', 'Images/thermometer_pl.jpg'), ('final_c', 'd'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'silud'), ('targ', 'silutu'), ('type', 'alt'), ('trig_img', 'Images/moustache.jpg'), ('targ_img', 'Images/moustache_pl.jpg'), ('final_c', 'd'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'limig'), ('targ', 'limiku'), ('type', 'alt'), ('trig_img', 'Images/screwdriver.jpg'), ('targ_img', 'Images/screwdriver_pl.jpg'), ('final_c', 'g'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'rimug'), ('targ', 'rimuku'), ('type', 'alt'), ('trig_img', 'Images/door.jpg'), ('targ_img', 'Images/door_pl.jpg'), ('final_c', 'g'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'sunag'), ('targ', 'sunaku'), ('type', 'alt'), ('trig_img', 'Images/nose.jpg'), ('targ_img', 'Images/nose_pl.jpg'), ('final_c', 'g'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'rinag'), ('targ', 'rinaku'), ('type', 'alt'), ('trig_img', 'Images/pen.jpg'), ('targ_img', 'Images/pen_pl.jpg'), ('final_c', 'g'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'nurug'), ('targ', 'nuruku'), ('type', 'alt'), ('trig_img', 'Images/clarinet.jpg'), ('targ_img', 'Images/clarinet_pl.jpg'), ('final_c', 'g'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'sumag'), ('targ', 'sumaku'), ('type', 'alt'), ('trig_img', 'Images/maracas.jpg'), ('targ_img', 'Images/maracas_pl.jpg'), ('final_c', 'g'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'rimag'), ('targ', 'rimaku'), ('type', 'alt'), ('trig_img', 'Images/bottle.jpg'), ('targ_img', 'Images/bottle_pl.jpg'), ('final_c', 'g'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'nirug'), ('targ', 'niruku'), ('type', 'alt'), ('trig_img', 'Images/garbage_can.jpg'), ('targ_img', 'Images/garbage_can_pl.jpg'), ('final_c', 'g'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'namag'), ('targ', 'namaku'), ('type', 'alt'), ('trig_img', 'Images/anvil.jpg'), ('targ_img', 'Images/anvil_pl.jpg'), ('final_c', 'g'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'runug'), ('targ', 'runuku'), ('type', 'alt'), ('trig_img', 'Images/cup.jpg'), ('targ_img', 'Images/cup_pl.jpg'), ('final_c', 'g'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'samug'), ('targ', 'samuku'), ('type', 'alt'), ('trig_img', 'Images/sleigh.jpg'), ('targ_img', 'Images/sleigh_pl.jpg'), ('final_c', 'g'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'narab'), ('targ', 'narabu'), ('type', 'non_alt'), ('trig_img', 'Images/watch.jpg'), ('targ_img', 'Images/watch_pl.jpg'), ('final_c', 'b'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'nulib'), ('targ', 'nulibu'), ('type', 'non_alt'), ('trig_img', 'Images/computer.jpg'), ('targ_img', 'Images/computer_pl.jpg'), ('final_c', 'b'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'lanib'), ('targ', 'lanibu'), ('type', 'non_alt'), ('trig_img', 'Images/bush.jpg'), ('targ_img', 'Images/bush_pl.jpg'), ('final_c', 'b'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'rumid'), ('targ', 'rumidu'), ('type', 'non_alt'), ('trig_img', 'Images/mushroom.jpg'), ('targ_img', 'Images/mushroom_pl.jpg'), ('final_c', 'd'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'lisud'), ('targ', 'lisudu'), ('type', 'non_alt'), ('trig_img', 'Images/statue.jpg'), ('targ_img', 'Images/statue_pl.jpg'), ('final_c', 'd'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'mamad'), ('targ', 'mamadu'), ('type', 'non_alt'), ('trig_img', 'Images/ice-cream.jpg'), ('targ_img', 'Images/ice-cream_pl.jpg'), ('final_c', 'd'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'nurag'), ('targ', 'nuragu'), ('type', 'non_alt'), ('trig_img', 'Images/lion.jpg'), ('targ_img', 'Images/lion_pl.jpg'), ('final_c', 'g'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'malug'), ('targ', 'malugu'), ('type', 'non_alt'), ('trig_img', 'Images/necklace.jpg'), ('targ_img', 'Images/necklace_pl.jpg'), ('final_c', 'g'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'sanag'), ('targ', 'sanagu'), ('type', 'non_alt'), ('trig_img', 'Images/fish.jpg'), ('targ_img', 'Images/fish_pl.jpg'), ('final_c', 'g'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'musapu'), ('targ', 'musab'), ('type', 'alt'), ('trig_img', 'Images/apple_pl.jpg'), ('targ_img', 'Images/apple.jpg'), ('final_c', 'b'), ('new', 'given'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'larupu'), ('targ', 'larub'), ('type', 'alt'), ('trig_img', 'Images/rock_pl.jpg'), ('targ_img', 'Images/rock.jpg'), ('final_c', 'b'), ('new', 'given'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'nalib'), ('targ', 'nalipu'), ('type', 'alt'), ('trig_img', 'Images/coin.jpg'), ('targ_img', 'Images/coin_pl.jpg'), ('final_c', 'b'), ('new', 'given'), ('num', 'pl'), ('instr', 'Write the plural form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'milupu'), ('targ', 'milub'), ('type', 'alt'), ('trig_img', 'Images/soap_pl.jpg'), ('targ_img', 'Images/soap.jpg'), ('final_c', 'b'), ('new', 'given'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'mirab'), ('targ', 'mirapu'), ('type', 'alt'), ('trig_img', 'Images/hammer.jpg'), ('targ_img', 'Images/hammer_pl.jpg'), ('final_c', 'b'), ('new', 'new'), ('num', 'pl'), ('instr', 'Write the plural form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'namab'), ('targ', 'namapu'), ('type', 'alt'), ('trig_img', 'Images/worm.jpg'), ('targ_img', 'Images/worm_pl.jpg'), ('final_c', 'b'), ('new', 'new'), ('num', 'pl'), ('instr', 'Write the plural form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'limipu'), ('targ', 'limib'), ('type', 'alt'), ('trig_img', 'Images/ring_pl.jpg'), ('targ_img', 'Images/ring.jpg'), ('final_c', 'b'), ('new', 'new'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'nirupu'), ('targ', 'nirub'), ('type', 'alt'), ('trig_img', 'Images/glove_pl.jpg'), ('targ_img', 'Images/glove.jpg'), ('final_c', 'b'), ('new', 'new'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'rumutu'), ('targ', 'rumud'), ('type', 'alt'), ('trig_img', 'Images/river_pl.jpg'), ('targ_img', 'Images/river.jpg'), ('final_c', 'd'), ('new', 'given'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'ranutu'), ('targ', 'ranud'), ('type', 'alt'), ('trig_img', 'Images/carpet_pl.jpg'), ('targ_img', 'Images/carpet.jpg'), ('final_c', 'd'), ('new', 'given'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'lunitu'), ('targ', 'lunid'), ('type', 'alt'), ('trig_img', 'Images/ship_pl.jpg'), ('targ_img', 'Images/ship.jpg'), ('final_c', 'd'), ('new', 'given'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'musad'), ('targ', 'musatu'), ('type', 'alt'), ('trig_img', 'Images/foot.jpg'), ('targ_img', 'Images/foot_pl.jpg'), ('final_c', 'd'), ('new', 'given'), ('num', 'pl'), ('instr', 'Write the plural form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'lumutu'), ('targ', 'lumud'), ('type', 'alt'), ('trig_img', 'Images/knife_pl.jpg'), ('targ_img', 'Images/knife.jpg'), ('final_c', 'd'), ('new', 'new'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'silad'), ('targ', 'silatu'), ('type', 'alt'), ('trig_img', 'Images/factory.jpg'), ('targ_img', 'Images/factory_pl.jpg'), ('final_c', 'd'), ('new', 'new'), ('num', 'pl'), ('instr', 'Write the plural form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'nirutu'), ('targ', 'nirud'), ('type', 'alt'), ('trig_img', 'Images/airplane_pl.jpg'), ('targ_img', 'Images/airplane.jpg'), ('final_c', 'd'), ('new', 'new'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'misutu'), ('targ', 'misud'), ('type', 'alt'), ('trig_img', 'Images/bicycle_pl.jpg'), ('targ_img', 'Images/bicycle.jpg'), ('final_c', 'd'), ('new', 'new'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'limiku'), ('targ', 'limig'), ('type', 'alt'), ('trig_img', 'Images/screwdriver_pl.jpg'), ('targ_img', 'Images/screwdriver.jpg'), ('final_c', 'g'), ('new', 'given'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'rimuku'), ('targ', 'rimug'), ('type', 'alt'), ('trig_img', 'Images/door_pl.jpg'), ('targ_img', 'Images/door.jpg'), ('final_c', 'g'), ('new', 'given'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'sunag'), ('targ', 'sunaku'), ('type', 'alt'), ('trig_img', 'Images/nose.jpg'), ('targ_img', 'Images/nose_pl.jpg'), ('final_c', 'g'), ('new', 'given'), ('num', 'pl'), ('instr', 'Write the plural form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'rinaku'), ('targ', 'rinag'), ('type', 'alt'), ('trig_img', 'Images/pen_pl.jpg'), ('targ_img', 'Images/pen.jpg'), ('final_c', 'g'), ('new', 'given'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'misuku'), ('targ', 'misug'), ('type', 'alt'), ('trig_img', 'Images/bell_pl.jpg'), ('targ_img', 'Images/bell.jpg'), ('final_c', 'g'), ('new', 'new'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'susaku'), ('targ', 'susag'), ('type', 'alt'), ('trig_img', 'Images/box_pl.jpg'), ('targ_img', 'Images/box.jpg'), ('final_c', 'g'), ('new', 'new'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'runiku'), ('targ', 'runig'), ('type', 'alt'), ('trig_img', 'Images/shack_pl.jpg'), ('targ_img', 'Images/shack.jpg'), ('final_c', 'g'), ('new', 'new'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'saluku'), ('targ', 'salug'), ('type', 'alt'), ('trig_img', 'Images/thistle_pl.jpg'), ('targ_img', 'Images/thistle.jpg'), ('final_c', 'g'), ('new', 'new'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'narab'), ('targ', 'narabu'), ('type', 'non_alt'), ('trig_img', 'Images/watch.jpg'), ('targ_img', 'Images/watch_pl.jpg'), ('final_c', 'b'), ('new', 'given'), ('num', 'pl'), ('instr', 'Write the plural form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'salibu'), ('targ', 'salib'), ('type', 'non_alt'), ('trig_img', 'Images/circle_pl.jpg'), ('targ_img', 'Images/circle.jpg'), ('final_c', 'b'), ('new', 'new'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'sunudu'), ('targ', 'sunud'), ('type', 'non_alt'), ('trig_img', 'Images/flagpole_pl.jpg'), ('targ_img', 'Images/flagpole.jpg'), ('final_c', 'd'), ('new', 'given'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'ranadu'), ('targ', 'ranad'), ('type', 'non_alt'), ('trig_img', 'Images/person_pl.jpg'), ('targ_img', 'Images/person.jpg'), ('final_c', 'd'), ('new', 'new'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'nuragu'), ('targ', 'nurag'), ('type', 'non_alt'), ('trig_img', 'Images/lion_pl.jpg'), ('targ_img', 'Images/lion.jpg'), ('final_c', 'g'), ('new', 'given'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'nunug'), ('targ', 'nunugu'), ('type', 'non_alt'), ('trig_img', 'Images/zebra.jpg'), ('targ_img', 'Images/zebra_pl.jpg'), ('final_c', 'g'), ('new', 'new'), ('num', 'pl'), ('instr', 'Write the plural form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'rumab'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/soldier.jpg'), ('targ_img', 'Images/soldier_pl.jpg'), ('final_c', 'b'), ('new', 'given'), ('num', 'pl'), ('instr', 'Choose the plural form of the word that belongs to the language'), ('a', 'rumapu'), ('k', 'rumabu'), ('corr', 'a'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'nasapu'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/spear_pl.jpg'), ('targ_img', 'Images/spear.jpg'), ('final_c', 'b'), ('new', 'given'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'nasap'), ('k', 'nasab'), ('corr', 'k'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'sanub'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/hammock.jpg'), ('targ_img', 'Images/hammock_pl.jpg'), ('final_c', 'b'), ('new', 'given'), ('num', 'pl'), ('instr', 'Choose the plural form of the word that belongs to the language'), ('a', 'sanupu'), ('k', 'sanubu'), ('corr', 'a'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'minupu'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/raindrop_pl.jpg'), ('targ_img', 'Images/raindrop.jpg'), ('final_c', 'b'), ('new', 'given'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'minup'), ('k', 'minub'), ('corr', 'k'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'musupu'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/dog_pl.jpg'), ('targ_img', 'Images/dog.jpg'), ('final_c', 'b'), ('new', 'new'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'musub'), ('k', 'musup'), ('corr', 'a'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'sinapu'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/tree_pl.jpg'), ('targ_img', 'Images/tree.jpg'), ('final_c', 'b'), ('new', 'new'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'sinap'), ('k', 'sinab'), ('corr', 'k'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'munipu'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/calender_pl.jpg'), ('targ_img', 'Images/calender.jpg'), ('final_c', 'b'), ('new', 'new'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'munib'), ('k', 'munip'), ('corr', 'a'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'murapu'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/mouse_pl.jpg'), ('targ_img', 'Images/mouse.jpg'), ('final_c', 'b'), ('new', 'new'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'murap'), ('k', 'murab'), ('corr', 'k'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'nurad'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/copier.jpg'), ('targ_img', 'Images/copier_pl.jpg'), ('final_c', 'd'), ('new', 'given'), ('num', 'pl'), ('instr', 'Choose the plural form of the word that belongs to the language'), ('a', 'nuratu'), ('k', 'nuradu'), ('corr', 'a'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'salitu'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/balloon_pl.jpg'), ('targ_img', 'Images/balloon.jpg'), ('final_c', 'd'), ('new', 'given'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'salit'), ('k', 'salid'), ('corr', 'k'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'milud'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/banana_pl.jpg'), ('targ_img', 'Images/banana.jpg'), ('final_c', 'd'), ('new', 'given'), ('num', 'pl'), ('instr', 'Choose the plural form of the word that belongs to the language'), ('a', 'milutu'), ('k', 'miludu'), ('corr', 'a'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'naritu'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/squid_pl.jpg'), ('targ_img', 'Images/squid.jpg'), ('final_c', 'd'), ('new', 'given'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'narit'), ('k', 'narid'), ('corr', 'k'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'lulutu'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/shovel_pl.jpg'), ('targ_img', 'Images/shovel.jpg'), ('final_c', 'd'), ('new', 'new'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'lulud'), ('k', 'lulut'), ('corr', 'a'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'lilitu'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/hamburger_pl.jpg'), ('targ_img', 'Images/hamburger.jpg'), ('final_c', 'd'), ('new', 'new'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'lilit'), ('k', 'lilid'), ('corr', 'k'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'runatu'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/bag_pl.jpg'), ('targ_img', 'Images/bag.jpg'), ('final_c', 'd'), ('new', 'new'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'runad'), ('k', 'runat'), ('corr', 'a'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'limutu'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/tank_pl.jpg'), ('targ_img', 'Images/tank.jpg'), ('final_c', 'd'), ('new', 'new'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'limut'), ('k', 'limud'), ('corr', 'k'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'nurug'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/clarinet.jpg'), ('targ_img', 'Images/clarinet_pl.jpg'), ('final_c', 'g'), ('new', 'given'), ('num', 'pl'), ('instr', 'Choose the plural form of the word that belongs to the language'), ('a', 'nuruku'), ('k', 'nurugu'), ('corr', 'a'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'sumaku'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/maracas_pl.jpg'), ('targ_img', 'Images/maracas.jpg'), ('final_c', 'g'), ('new', 'given'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'sumak'), ('k', 'sumag'), ('corr', 'k'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'rimaku'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/bottle_pl.jpg'), ('targ_img', 'Images/bottle.jpg'), ('final_c', 'g'), ('new', 'given'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'rimag'), ('k', 'rimak'), ('corr', 'a'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'niruku'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/garbage_can_pl.jpg'), ('targ_img', 'Images/garbage_can.jpg'), ('final_c', 'g'), ('new', 'given'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'niruk'), ('k', 'nirug'), ('corr', 'k'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'rusuku'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/cat_pl.jpg'), ('targ_img', 'Images/cat.jpg'), ('final_c', 'g'), ('new', 'new'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'rusug'), ('k', 'rusuk'), ('corr', 'a'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'maniku'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/hoover_pl.jpg'), ('targ_img', 'Images/hoover.jpg'), ('final_c', 'g'), ('new', 'new'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'manik'), ('k', 'manig'), ('corr', 'k'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'liliku'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/feather_pl.jpg'), ('targ_img', 'Images/feather.jpg'), ('final_c', 'g'), ('new', 'new'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'lilig'), ('k', 'lilik'), ('corr', 'a'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'lisag'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/flower.jpg'), ('targ_img', 'Images/flower_pl.jpg'), ('final_c', 'g'), ('new', 'new'), ('num', 'pl'), ('instr', 'Choose the plural form of the word that belongs to the language'), ('a', 'lisaku'), ('k', 'lisagu'), ('corr', 'k'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'nulib'), ('targ', None), ('type', 'non_alt'), ('trig_img', 'Images/computer.jpg'), ('targ_img', 'Images/computer_pl.jpg'), ('final_c', 'b'), ('new', 'given'), ('num', 'pl'), ('instr', 'Choose the plural form of the word that belongs to the language'), ('a', 'nulibu'), ('k', 'nulipu'), ('corr', 'a'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'nanabu'), ('targ', None), ('type', 'non_alt'), ('trig_img', 'Images/sun_pl.jpg'), ('targ_img', 'Images/sun.jpg'), ('final_c', 'b'), ('new', 'new'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'narap'), ('k', 'nanab'), ('corr', 'k'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'lisudu'), ('targ', None), ('type', 'non_alt'), ('trig_img', 'Images/statue_pl.jpg'), ('targ_img', 'Images/statue.jpg'), ('final_c', 'd'), ('new', 'given'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'lisud'), ('k', 'lisut'), ('corr', 'a'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'nunidu'), ('targ', None), ('type', 'non_alt'), ('trig_img', 'Images/car_pl.jpg'), ('targ_img', 'Images/car.jpg'), ('final_c', 'd'), ('new', 'new'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'nunit'), ('k', 'nunid'), ('corr', 'k'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'malugu'), ('targ', None), ('type', 'non_alt'), ('trig_img', 'Images/necklace_pl.jpg'), ('targ_img', 'Images/necklace.jpg'), ('final_c', 'g'), ('new', 'given'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'malug'), ('k', 'maluk'), ('corr', 'a'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'lusag'), ('targ', None), ('type', 'non_alt'), ('trig_img', 'Images/helicopter_pl.jpg'), ('targ_img', 'Images/helicopter.jpg'), ('final_c', 'g'), ('new', 'new'), ('num', 'pl'), ('instr', 'Choose the plural form of the word that belongs to the language'), ('a', 'lusagu'), ('k', 'lusaku'), ('corr', 'k'), ('lang', 'voicing'), ('phase', 'FC')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="Lists\voicing.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="Exposure"/>
    <Routine name="ISI_1sec"/>
    <LoopTerminator name="trials"/>
    <Routine name="Instruction_Prod"/>
    <Routine name="ISI_Pre"/>
    <LoopInitiator loopType="TrialHandler" name="trials_2">
      <Param name="Selected rows" updates="None" val="45:47" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('trig', 'musab'), ('targ', 'musapu'), ('type', 'alt'), ('trig_img', 'Images/apple.jpg'), ('targ_img', 'Images/apple_pl.jpg'), ('final_c', 'b'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'larub'), ('targ', 'larupu'), ('type', 'alt'), ('trig_img', 'Images/rock.jpg'), ('targ_img', 'Images/rock_pl.jpg'), ('final_c', 'b'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'nalib'), ('targ', 'nalipu'), ('type', 'alt'), ('trig_img', 'Images/coin.jpg'), ('targ_img', 'Images/coin_pl.jpg'), ('final_c', 'b'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'milub'), ('targ', 'milupu'), ('type', 'alt'), ('trig_img', 'Images/soap.jpg'), ('targ_img', 'Images/soap_pl.jpg'), ('final_c', 'b'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'rumab'), ('targ', 'rumapu'), ('type', 'alt'), ('trig_img', 'Images/soldier.jpg'), ('targ_img', 'Images/soldier_pl.jpg'), ('final_c', 'b'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'nasab'), ('targ', 'nasapu'), ('type', 'alt'), ('trig_img', 'Images/spear.jpg'), ('targ_img', 'Images/spear_pl.jpg'), ('final_c', 'b'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'sanub'), ('targ', 'sanupu'), ('type', 'alt'), ('trig_img', 'Images/hammock.jpg'), ('targ_img', 'Images/hammock_pl.jpg'), ('final_c', 'b'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'minub'), ('targ', 'minupu'), ('type', 'alt'), ('trig_img', 'Images/raindrop.jpg'), ('targ_img', 'Images/raindrop_pl.jpg'), ('final_c', 'b'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'nimub'), ('targ', 'nimupu'), ('type', 'alt'), ('trig_img', 'Images/hand.jpg'), ('targ_img', 'Images/hand_pl.jpg'), ('final_c', 'b'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'rimab'), ('targ', 'rimapu'), ('type', 'alt'), ('trig_img', 'Images/bean.jpg'), ('targ_img', 'Images/bean_pl.jpg'), ('final_c', 'b'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'misab'), ('targ', 'misapu'), ('type', 'alt'), ('trig_img', 'Images/rainbow.jpg'), ('targ_img', 'Images/rainbow_pl.jpg'), ('final_c', 'b'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'rumud'), ('targ', 'rumutu'), ('type', 'alt'), ('trig_img', 'Images/river.jpg'), ('targ_img', 'Images/river_pl.jpg'), ('final_c', 'd'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'ranud'), ('targ', 'ranutu'), ('type', 'alt'), ('trig_img', 'Images/carpet.jpg'), ('targ_img', 'Images/carpet_pl.jpg'), ('final_c', 'd'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'lunid'), ('targ', 'lunitu'), ('type', 'alt'), ('trig_img', 'Images/ship.jpg'), ('targ_img', 'Images/ship_pl.jpg'), ('final_c', 'd'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'musad'), ('targ', 'musatu'), ('type', 'alt'), ('trig_img', 'Images/foot.jpg'), ('targ_img', 'Images/foot_pl.jpg'), ('final_c', 'd'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'nurad'), ('targ', 'nuratu'), ('type', 'alt'), ('trig_img', 'Images/copier.jpg'), ('targ_img', 'Images/copier_pl.jpg'), ('final_c', 'd'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'salid'), ('targ', 'salitu'), ('type', 'alt'), ('trig_img', 'Images/balloon.jpg'), ('targ_img', 'Images/balloon_pl.jpg'), ('final_c', 'd'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'milud'), ('targ', 'milutu'), ('type', 'alt'), ('trig_img', 'Images/banana.jpg'), ('targ_img', 'Images/banana_pl.jpg'), ('final_c', 'd'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'narid'), ('targ', 'naritu'), ('type', 'alt'), ('trig_img', 'Images/squid.jpg'), ('targ_img', 'Images/squid_pl.jpg'), ('final_c', 'd'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'lirid'), ('targ', 'liritu'), ('type', 'alt'), ('trig_img', 'Images/bridge.jpg'), ('targ_img', 'Images/bridge_pl.jpg'), ('final_c', 'd'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'masid'), ('targ', 'masitu'), ('type', 'alt'), ('trig_img', 'Images/thermometer.jpg'), ('targ_img', 'Images/thermometer_pl.jpg'), ('final_c', 'd'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'silud'), ('targ', 'silutu'), ('type', 'alt'), ('trig_img', 'Images/moustache.jpg'), ('targ_img', 'Images/moustache_pl.jpg'), ('final_c', 'd'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'limig'), ('targ', 'limiku'), ('type', 'alt'), ('trig_img', 'Images/screwdriver.jpg'), ('targ_img', 'Images/screwdriver_pl.jpg'), ('final_c', 'g'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'rimug'), ('targ', 'rimuku'), ('type', 'alt'), ('trig_img', 'Images/door.jpg'), ('targ_img', 'Images/door_pl.jpg'), ('final_c', 'g'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'sunag'), ('targ', 'sunaku'), ('type', 'alt'), ('trig_img', 'Images/nose.jpg'), ('targ_img', 'Images/nose_pl.jpg'), ('final_c', 'g'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'rinag'), ('targ', 'rinaku'), ('type', 'alt'), ('trig_img', 'Images/pen.jpg'), ('targ_img', 'Images/pen_pl.jpg'), ('final_c', 'g'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'nurug'), ('targ', 'nuruku'), ('type', 'alt'), ('trig_img', 'Images/clarinet.jpg'), ('targ_img', 'Images/clarinet_pl.jpg'), ('final_c', 'g'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'sumag'), ('targ', 'sumaku'), ('type', 'alt'), ('trig_img', 'Images/maracas.jpg'), ('targ_img', 'Images/maracas_pl.jpg'), ('final_c', 'g'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'rimag'), ('targ', 'rimaku'), ('type', 'alt'), ('trig_img', 'Images/bottle.jpg'), ('targ_img', 'Images/bottle_pl.jpg'), ('final_c', 'g'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'nirug'), ('targ', 'niruku'), ('type', 'alt'), ('trig_img', 'Images/garbage_can.jpg'), ('targ_img', 'Images/garbage_can_pl.jpg'), ('final_c', 'g'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'namag'), ('targ', 'namaku'), ('type', 'alt'), ('trig_img', 'Images/anvil.jpg'), ('targ_img', 'Images/anvil_pl.jpg'), ('final_c', 'g'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'runug'), ('targ', 'runuku'), ('type', 'alt'), ('trig_img', 'Images/cup.jpg'), ('targ_img', 'Images/cup_pl.jpg'), ('final_c', 'g'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'samug'), ('targ', 'samuku'), ('type', 'alt'), ('trig_img', 'Images/sleigh.jpg'), ('targ_img', 'Images/sleigh_pl.jpg'), ('final_c', 'g'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'narab'), ('targ', 'narabu'), ('type', 'non_alt'), ('trig_img', 'Images/watch.jpg'), ('targ_img', 'Images/watch_pl.jpg'), ('final_c', 'b'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'nulib'), ('targ', 'nulibu'), ('type', 'non_alt'), ('trig_img', 'Images/computer.jpg'), ('targ_img', 'Images/computer_pl.jpg'), ('final_c', 'b'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'lanib'), ('targ', 'lanibu'), ('type', 'non_alt'), ('trig_img', 'Images/bush.jpg'), ('targ_img', 'Images/bush_pl.jpg'), ('final_c', 'b'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'rumid'), ('targ', 'rumidu'), ('type', 'non_alt'), ('trig_img', 'Images/mushroom.jpg'), ('targ_img', 'Images/mushroom_pl.jpg'), ('final_c', 'd'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'lisud'), ('targ', 'lisudu'), ('type', 'non_alt'), ('trig_img', 'Images/statue.jpg'), ('targ_img', 'Images/statue_pl.jpg'), ('final_c', 'd'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'mamad'), ('targ', 'mamadu'), ('type', 'non_alt'), ('trig_img', 'Images/ice-cream.jpg'), ('targ_img', 'Images/ice-cream_pl.jpg'), ('final_c', 'd'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'nurag'), ('targ', 'nuragu'), ('type', 'non_alt'), ('trig_img', 'Images/lion.jpg'), ('targ_img', 'Images/lion_pl.jpg'), ('final_c', 'g'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'malug'), ('targ', 'malugu'), ('type', 'non_alt'), ('trig_img', 'Images/necklace.jpg'), ('targ_img', 'Images/necklace_pl.jpg'), ('final_c', 'g'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'sanag'), ('targ', 'sanagu'), ('type', 'non_alt'), ('trig_img', 'Images/fish.jpg'), ('targ_img', 'Images/fish_pl.jpg'), ('final_c', 'g'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'musapu'), ('targ', 'musab'), ('type', 'alt'), ('trig_img', 'Images/apple_pl.jpg'), ('targ_img', 'Images/apple.jpg'), ('final_c', 'b'), ('new', 'given'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'larupu'), ('targ', 'larub'), ('type', 'alt'), ('trig_img', 'Images/rock_pl.jpg'), ('targ_img', 'Images/rock.jpg'), ('final_c', 'b'), ('new', 'given'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'nalib'), ('targ', 'nalipu'), ('type', 'alt'), ('trig_img', 'Images/coin.jpg'), ('targ_img', 'Images/coin_pl.jpg'), ('final_c', 'b'), ('new', 'given'), ('num', 'pl'), ('instr', 'Write the plural form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'milupu'), ('targ', 'milub'), ('type', 'alt'), ('trig_img', 'Images/soap_pl.jpg'), ('targ_img', 'Images/soap.jpg'), ('final_c', 'b'), ('new', 'given'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'mirab'), ('targ', 'mirapu'), ('type', 'alt'), ('trig_img', 'Images/hammer.jpg'), ('targ_img', 'Images/hammer_pl.jpg'), ('final_c', 'b'), ('new', 'new'), ('num', 'pl'), ('instr', 'Write the plural form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'namab'), ('targ', 'namapu'), ('type', 'alt'), ('trig_img', 'Images/worm.jpg'), ('targ_img', 'Images/worm_pl.jpg'), ('final_c', 'b'), ('new', 'new'), ('num', 'pl'), ('instr', 'Write the plural form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'limipu'), ('targ', 'limib'), ('type', 'alt'), ('trig_img', 'Images/ring_pl.jpg'), ('targ_img', 'Images/ring.jpg'), ('final_c', 'b'), ('new', 'new'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'nirupu'), ('targ', 'nirub'), ('type', 'alt'), ('trig_img', 'Images/glove_pl.jpg'), ('targ_img', 'Images/glove.jpg'), ('final_c', 'b'), ('new', 'new'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'rumutu'), ('targ', 'rumud'), ('type', 'alt'), ('trig_img', 'Images/river_pl.jpg'), ('targ_img', 'Images/river.jpg'), ('final_c', 'd'), ('new', 'given'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'ranutu'), ('targ', 'ranud'), ('type', 'alt'), ('trig_img', 'Images/carpet_pl.jpg'), ('targ_img', 'Images/carpet.jpg'), ('final_c', 'd'), ('new', 'given'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'lunitu'), ('targ', 'lunid'), ('type', 'alt'), ('trig_img', 'Images/ship_pl.jpg'), ('targ_img', 'Images/ship.jpg'), ('final_c', 'd'), ('new', 'given'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'musad'), ('targ', 'musatu'), ('type', 'alt'), ('trig_img', 'Images/foot.jpg'), ('targ_img', 'Images/foot_pl.jpg'), ('final_c', 'd'), ('new', 'given'), ('num', 'pl'), ('instr', 'Write the plural form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'lumutu'), ('targ', 'lumud'), ('type', 'alt'), ('trig_img', 'Images/knife_pl.jpg'), ('targ_img', 'Images/knife.jpg'), ('final_c', 'd'), ('new', 'new'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'silad'), ('targ', 'silatu'), ('type', 'alt'), ('trig_img', 'Images/factory.jpg'), ('targ_img', 'Images/factory_pl.jpg'), ('final_c', 'd'), ('new', 'new'), ('num', 'pl'), ('instr', 'Write the plural form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'nirutu'), ('targ', 'nirud'), ('type', 'alt'), ('trig_img', 'Images/airplane_pl.jpg'), ('targ_img', 'Images/airplane.jpg'), ('final_c', 'd'), ('new', 'new'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'misutu'), ('targ', 'misud'), ('type', 'alt'), ('trig_img', 'Images/bicycle_pl.jpg'), ('targ_img', 'Images/bicycle.jpg'), ('final_c', 'd'), ('new', 'new'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'limiku'), ('targ', 'limig'), ('type', 'alt'), ('trig_img', 'Images/screwdriver_pl.jpg'), ('targ_img', 'Images/screwdriver.jpg'), ('final_c', 'g'), ('new', 'given'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'rimuku'), ('targ', 'rimug'), ('type', 'alt'), ('trig_img', 'Images/door_pl.jpg'), ('targ_img', 'Images/door.jpg'), ('final_c', 'g'), ('new', 'given'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'sunag'), ('targ', 'sunaku'), ('type', 'alt'), ('trig_img', 'Images/nose.jpg'), ('targ_img', 'Images/nose_pl.jpg'), ('final_c', 'g'), ('new', 'given'), ('num', 'pl'), ('instr', 'Write the plural form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'rinaku'), ('targ', 'rinag'), ('type', 'alt'), ('trig_img', 'Images/pen_pl.jpg'), ('targ_img', 'Images/pen.jpg'), ('final_c', 'g'), ('new', 'given'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'misuku'), ('targ', 'misug'), ('type', 'alt'), ('trig_img', 'Images/bell_pl.jpg'), ('targ_img', 'Images/bell.jpg'), ('final_c', 'g'), ('new', 'new'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'susaku'), ('targ', 'susag'), ('type', 'alt'), ('trig_img', 'Images/box_pl.jpg'), ('targ_img', 'Images/box.jpg'), ('final_c', 'g'), ('new', 'new'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'runiku'), ('targ', 'runig'), ('type', 'alt'), ('trig_img', 'Images/shack_pl.jpg'), ('targ_img', 'Images/shack.jpg'), ('final_c', 'g'), ('new', 'new'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'saluku'), ('targ', 'salug'), ('type', 'alt'), ('trig_img', 'Images/thistle_pl.jpg'), ('targ_img', 'Images/thistle.jpg'), ('final_c', 'g'), ('new', 'new'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'narab'), ('targ', 'narabu'), ('type', 'non_alt'), ('trig_img', 'Images/watch.jpg'), ('targ_img', 'Images/watch_pl.jpg'), ('final_c', 'b'), ('new', 'given'), ('num', 'pl'), ('instr', 'Write the plural form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'salibu'), ('targ', 'salib'), ('type', 'non_alt'), ('trig_img', 'Images/circle_pl.jpg'), ('targ_img', 'Images/circle.jpg'), ('final_c', 'b'), ('new', 'new'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'sunudu'), ('targ', 'sunud'), ('type', 'non_alt'), ('trig_img', 'Images/flagpole_pl.jpg'), ('targ_img', 'Images/flagpole.jpg'), ('final_c', 'd'), ('new', 'given'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'ranadu'), ('targ', 'ranad'), ('type', 'non_alt'), ('trig_img', 'Images/person_pl.jpg'), ('targ_img', 'Images/person.jpg'), ('final_c', 'd'), ('new', 'new'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'nuragu'), ('targ', 'nurag'), ('type', 'non_alt'), ('trig_img', 'Images/lion_pl.jpg'), ('targ_img', 'Images/lion.jpg'), ('final_c', 'g'), ('new', 'given'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'nunug'), ('targ', 'nunugu'), ('type', 'non_alt'), ('trig_img', 'Images/zebra.jpg'), ('targ_img', 'Images/zebra_pl.jpg'), ('final_c', 'g'), ('new', 'new'), ('num', 'pl'), ('instr', 'Write the plural form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'rumab'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/soldier.jpg'), ('targ_img', 'Images/soldier_pl.jpg'), ('final_c', 'b'), ('new', 'given'), ('num', 'pl'), ('instr', 'Choose the plural form of the word that belongs to the language'), ('a', 'rumapu'), ('k', 'rumabu'), ('corr', 'a'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'nasapu'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/spear_pl.jpg'), ('targ_img', 'Images/spear.jpg'), ('final_c', 'b'), ('new', 'given'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'nasap'), ('k', 'nasab'), ('corr', 'k'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'sanub'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/hammock.jpg'), ('targ_img', 'Images/hammock_pl.jpg'), ('final_c', 'b'), ('new', 'given'), ('num', 'pl'), ('instr', 'Choose the plural form of the word that belongs to the language'), ('a', 'sanupu'), ('k', 'sanubu'), ('corr', 'a'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'minupu'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/raindrop_pl.jpg'), ('targ_img', 'Images/raindrop.jpg'), ('final_c', 'b'), ('new', 'given'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'minup'), ('k', 'minub'), ('corr', 'k'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'musupu'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/dog_pl.jpg'), ('targ_img', 'Images/dog.jpg'), ('final_c', 'b'), ('new', 'new'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'musub'), ('k', 'musup'), ('corr', 'a'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'sinapu'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/tree_pl.jpg'), ('targ_img', 'Images/tree.jpg'), ('final_c', 'b'), ('new', 'new'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'sinap'), ('k', 'sinab'), ('corr', 'k'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'munipu'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/calender_pl.jpg'), ('targ_img', 'Images/calender.jpg'), ('final_c', 'b'), ('new', 'new'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'munib'), ('k', 'munip'), ('corr', 'a'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'murapu'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/mouse_pl.jpg'), ('targ_img', 'Images/mouse.jpg'), ('final_c', 'b'), ('new', 'new'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'murap'), ('k', 'murab'), ('corr', 'k'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'nurad'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/copier.jpg'), ('targ_img', 'Images/copier_pl.jpg'), ('final_c', 'd'), ('new', 'given'), ('num', 'pl'), ('instr', 'Choose the plural form of the word that belongs to the language'), ('a', 'nuratu'), ('k', 'nuradu'), ('corr', 'a'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'salitu'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/balloon_pl.jpg'), ('targ_img', 'Images/balloon.jpg'), ('final_c', 'd'), ('new', 'given'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'salit'), ('k', 'salid'), ('corr', 'k'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'milud'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/banana_pl.jpg'), ('targ_img', 'Images/banana.jpg'), ('final_c', 'd'), ('new', 'given'), ('num', 'pl'), ('instr', 'Choose the plural form of the word that belongs to the language'), ('a', 'milutu'), ('k', 'miludu'), ('corr', 'a'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'naritu'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/squid_pl.jpg'), ('targ_img', 'Images/squid.jpg'), ('final_c', 'd'), ('new', 'given'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'narit'), ('k', 'narid'), ('corr', 'k'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'lulutu'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/shovel_pl.jpg'), ('targ_img', 'Images/shovel.jpg'), ('final_c', 'd'), ('new', 'new'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'lulud'), ('k', 'lulut'), ('corr', 'a'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'lilitu'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/hamburger_pl.jpg'), ('targ_img', 'Images/hamburger.jpg'), ('final_c', 'd'), ('new', 'new'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'lilit'), ('k', 'lilid'), ('corr', 'k'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'runatu'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/bag_pl.jpg'), ('targ_img', 'Images/bag.jpg'), ('final_c', 'd'), ('new', 'new'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'runad'), ('k', 'runat'), ('corr', 'a'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'limutu'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/tank_pl.jpg'), ('targ_img', 'Images/tank.jpg'), ('final_c', 'd'), ('new', 'new'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'limut'), ('k', 'limud'), ('corr', 'k'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'nurug'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/clarinet.jpg'), ('targ_img', 'Images/clarinet_pl.jpg'), ('final_c', 'g'), ('new', 'given'), ('num', 'pl'), ('instr', 'Choose the plural form of the word that belongs to the language'), ('a', 'nuruku'), ('k', 'nurugu'), ('corr', 'a'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'sumaku'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/maracas_pl.jpg'), ('targ_img', 'Images/maracas.jpg'), ('final_c', 'g'), ('new', 'given'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'sumak'), ('k', 'sumag'), ('corr', 'k'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'rimaku'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/bottle_pl.jpg'), ('targ_img', 'Images/bottle.jpg'), ('final_c', 'g'), ('new', 'given'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'rimag'), ('k', 'rimak'), ('corr', 'a'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'niruku'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/garbage_can_pl.jpg'), ('targ_img', 'Images/garbage_can.jpg'), ('final_c', 'g'), ('new', 'given'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'niruk'), ('k', 'nirug'), ('corr', 'k'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'rusuku'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/cat_pl.jpg'), ('targ_img', 'Images/cat.jpg'), ('final_c', 'g'), ('new', 'new'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'rusug'), ('k', 'rusuk'), ('corr', 'a'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'maniku'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/hoover_pl.jpg'), ('targ_img', 'Images/hoover.jpg'), ('final_c', 'g'), ('new', 'new'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'manik'), ('k', 'manig'), ('corr', 'k'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'liliku'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/feather_pl.jpg'), ('targ_img', 'Images/feather.jpg'), ('final_c', 'g'), ('new', 'new'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'lilig'), ('k', 'lilik'), ('corr', 'a'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'lisag'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/flower.jpg'), ('targ_img', 'Images/flower_pl.jpg'), ('final_c', 'g'), ('new', 'new'), ('num', 'pl'), ('instr', 'Choose the plural form of the word that belongs to the language'), ('a', 'lisaku'), ('k', 'lisagu'), ('corr', 'k'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'nulib'), ('targ', None), ('type', 'non_alt'), ('trig_img', 'Images/computer.jpg'), ('targ_img', 'Images/computer_pl.jpg'), ('final_c', 'b'), ('new', 'given'), ('num', 'pl'), ('instr', 'Choose the plural form of the word that belongs to the language'), ('a', 'nulibu'), ('k', 'nulipu'), ('corr', 'a'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'nanabu'), ('targ', None), ('type', 'non_alt'), ('trig_img', 'Images/sun_pl.jpg'), ('targ_img', 'Images/sun.jpg'), ('final_c', 'b'), ('new', 'new'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'narap'), ('k', 'nanab'), ('corr', 'k'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'lisudu'), ('targ', None), ('type', 'non_alt'), ('trig_img', 'Images/statue_pl.jpg'), ('targ_img', 'Images/statue.jpg'), ('final_c', 'd'), ('new', 'given'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'lisud'), ('k', 'lisut'), ('corr', 'a'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'nunidu'), ('targ', None), ('type', 'non_alt'), ('trig_img', 'Images/car_pl.jpg'), ('targ_img', 'Images/car.jpg'), ('final_c', 'd'), ('new', 'new'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'nunit'), ('k', 'nunid'), ('corr', 'k'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'malugu'), ('targ', None), ('type', 'non_alt'), ('trig_img', 'Images/necklace_pl.jpg'), ('targ_img', 'Images/necklace.jpg'), ('final_c', 'g'), ('new', 'given'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'malug'), ('k', 'maluk'), ('corr', 'a'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'lusag'), ('targ', None), ('type', 'non_alt'), ('trig_img', 'Images/helicopter_pl.jpg'), ('targ_img', 'Images/helicopter.jpg'), ('final_c', 'g'), ('new', 'new'), ('num', 'pl'), ('instr', 'Choose the plural form of the word that belongs to the language'), ('a', 'lusagu'), ('k', 'lusaku'), ('corr', 'k'), ('lang', 'voicing'), ('phase', 'FC')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="Lists\voicing.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="trials_2" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="Test_Prod"/>
    <Routine name="ISI_1sec"/>
    <LoopTerminator name="trials_2"/>
    <Routine name="Instruction_FC"/>
    <Routine name="ISI_Pre"/>
    <LoopInitiator loopType="TrialHandler" name="trials_3">
      <Param name="Selected rows" updates="None" val="75:77" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('trig', 'musab'), ('targ', 'musapu'), ('type', 'alt'), ('trig_img', 'Images/apple.jpg'), ('targ_img', 'Images/apple_pl.jpg'), ('final_c', 'b'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'larub'), ('targ', 'larupu'), ('type', 'alt'), ('trig_img', 'Images/rock.jpg'), ('targ_img', 'Images/rock_pl.jpg'), ('final_c', 'b'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'nalib'), ('targ', 'nalipu'), ('type', 'alt'), ('trig_img', 'Images/coin.jpg'), ('targ_img', 'Images/coin_pl.jpg'), ('final_c', 'b'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'milub'), ('targ', 'milupu'), ('type', 'alt'), ('trig_img', 'Images/soap.jpg'), ('targ_img', 'Images/soap_pl.jpg'), ('final_c', 'b'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'rumab'), ('targ', 'rumapu'), ('type', 'alt'), ('trig_img', 'Images/soldier.jpg'), ('targ_img', 'Images/soldier_pl.jpg'), ('final_c', 'b'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'nasab'), ('targ', 'nasapu'), ('type', 'alt'), ('trig_img', 'Images/spear.jpg'), ('targ_img', 'Images/spear_pl.jpg'), ('final_c', 'b'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'sanub'), ('targ', 'sanupu'), ('type', 'alt'), ('trig_img', 'Images/hammock.jpg'), ('targ_img', 'Images/hammock_pl.jpg'), ('final_c', 'b'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'minub'), ('targ', 'minupu'), ('type', 'alt'), ('trig_img', 'Images/raindrop.jpg'), ('targ_img', 'Images/raindrop_pl.jpg'), ('final_c', 'b'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'nimub'), ('targ', 'nimupu'), ('type', 'alt'), ('trig_img', 'Images/hand.jpg'), ('targ_img', 'Images/hand_pl.jpg'), ('final_c', 'b'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'rimab'), ('targ', 'rimapu'), ('type', 'alt'), ('trig_img', 'Images/bean.jpg'), ('targ_img', 'Images/bean_pl.jpg'), ('final_c', 'b'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'misab'), ('targ', 'misapu'), ('type', 'alt'), ('trig_img', 'Images/rainbow.jpg'), ('targ_img', 'Images/rainbow_pl.jpg'), ('final_c', 'b'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'rumud'), ('targ', 'rumutu'), ('type', 'alt'), ('trig_img', 'Images/river.jpg'), ('targ_img', 'Images/river_pl.jpg'), ('final_c', 'd'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'ranud'), ('targ', 'ranutu'), ('type', 'alt'), ('trig_img', 'Images/carpet.jpg'), ('targ_img', 'Images/carpet_pl.jpg'), ('final_c', 'd'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'lunid'), ('targ', 'lunitu'), ('type', 'alt'), ('trig_img', 'Images/ship.jpg'), ('targ_img', 'Images/ship_pl.jpg'), ('final_c', 'd'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'musad'), ('targ', 'musatu'), ('type', 'alt'), ('trig_img', 'Images/foot.jpg'), ('targ_img', 'Images/foot_pl.jpg'), ('final_c', 'd'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'nurad'), ('targ', 'nuratu'), ('type', 'alt'), ('trig_img', 'Images/copier.jpg'), ('targ_img', 'Images/copier_pl.jpg'), ('final_c', 'd'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'salid'), ('targ', 'salitu'), ('type', 'alt'), ('trig_img', 'Images/balloon.jpg'), ('targ_img', 'Images/balloon_pl.jpg'), ('final_c', 'd'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'milud'), ('targ', 'milutu'), ('type', 'alt'), ('trig_img', 'Images/banana.jpg'), ('targ_img', 'Images/banana_pl.jpg'), ('final_c', 'd'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'narid'), ('targ', 'naritu'), ('type', 'alt'), ('trig_img', 'Images/squid.jpg'), ('targ_img', 'Images/squid_pl.jpg'), ('final_c', 'd'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'lirid'), ('targ', 'liritu'), ('type', 'alt'), ('trig_img', 'Images/bridge.jpg'), ('targ_img', 'Images/bridge_pl.jpg'), ('final_c', 'd'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'masid'), ('targ', 'masitu'), ('type', 'alt'), ('trig_img', 'Images/thermometer.jpg'), ('targ_img', 'Images/thermometer_pl.jpg'), ('final_c', 'd'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'silud'), ('targ', 'silutu'), ('type', 'alt'), ('trig_img', 'Images/moustache.jpg'), ('targ_img', 'Images/moustache_pl.jpg'), ('final_c', 'd'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'limig'), ('targ', 'limiku'), ('type', 'alt'), ('trig_img', 'Images/screwdriver.jpg'), ('targ_img', 'Images/screwdriver_pl.jpg'), ('final_c', 'g'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'rimug'), ('targ', 'rimuku'), ('type', 'alt'), ('trig_img', 'Images/door.jpg'), ('targ_img', 'Images/door_pl.jpg'), ('final_c', 'g'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'sunag'), ('targ', 'sunaku'), ('type', 'alt'), ('trig_img', 'Images/nose.jpg'), ('targ_img', 'Images/nose_pl.jpg'), ('final_c', 'g'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'rinag'), ('targ', 'rinaku'), ('type', 'alt'), ('trig_img', 'Images/pen.jpg'), ('targ_img', 'Images/pen_pl.jpg'), ('final_c', 'g'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'nurug'), ('targ', 'nuruku'), ('type', 'alt'), ('trig_img', 'Images/clarinet.jpg'), ('targ_img', 'Images/clarinet_pl.jpg'), ('final_c', 'g'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'sumag'), ('targ', 'sumaku'), ('type', 'alt'), ('trig_img', 'Images/maracas.jpg'), ('targ_img', 'Images/maracas_pl.jpg'), ('final_c', 'g'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'rimag'), ('targ', 'rimaku'), ('type', 'alt'), ('trig_img', 'Images/bottle.jpg'), ('targ_img', 'Images/bottle_pl.jpg'), ('final_c', 'g'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'nirug'), ('targ', 'niruku'), ('type', 'alt'), ('trig_img', 'Images/garbage_can.jpg'), ('targ_img', 'Images/garbage_can_pl.jpg'), ('final_c', 'g'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'namag'), ('targ', 'namaku'), ('type', 'alt'), ('trig_img', 'Images/anvil.jpg'), ('targ_img', 'Images/anvil_pl.jpg'), ('final_c', 'g'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'runug'), ('targ', 'runuku'), ('type', 'alt'), ('trig_img', 'Images/cup.jpg'), ('targ_img', 'Images/cup_pl.jpg'), ('final_c', 'g'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'samug'), ('targ', 'samuku'), ('type', 'alt'), ('trig_img', 'Images/sleigh.jpg'), ('targ_img', 'Images/sleigh_pl.jpg'), ('final_c', 'g'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'narab'), ('targ', 'narabu'), ('type', 'non_alt'), ('trig_img', 'Images/watch.jpg'), ('targ_img', 'Images/watch_pl.jpg'), ('final_c', 'b'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'nulib'), ('targ', 'nulibu'), ('type', 'non_alt'), ('trig_img', 'Images/computer.jpg'), ('targ_img', 'Images/computer_pl.jpg'), ('final_c', 'b'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'lanib'), ('targ', 'lanibu'), ('type', 'non_alt'), ('trig_img', 'Images/bush.jpg'), ('targ_img', 'Images/bush_pl.jpg'), ('final_c', 'b'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'rumid'), ('targ', 'rumidu'), ('type', 'non_alt'), ('trig_img', 'Images/mushroom.jpg'), ('targ_img', 'Images/mushroom_pl.jpg'), ('final_c', 'd'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'lisud'), ('targ', 'lisudu'), ('type', 'non_alt'), ('trig_img', 'Images/statue.jpg'), ('targ_img', 'Images/statue_pl.jpg'), ('final_c', 'd'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'mamad'), ('targ', 'mamadu'), ('type', 'non_alt'), ('trig_img', 'Images/ice-cream.jpg'), ('targ_img', 'Images/ice-cream_pl.jpg'), ('final_c', 'd'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'nurag'), ('targ', 'nuragu'), ('type', 'non_alt'), ('trig_img', 'Images/lion.jpg'), ('targ_img', 'Images/lion_pl.jpg'), ('final_c', 'g'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'malug'), ('targ', 'malugu'), ('type', 'non_alt'), ('trig_img', 'Images/necklace.jpg'), ('targ_img', 'Images/necklace_pl.jpg'), ('final_c', 'g'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'sanag'), ('targ', 'sanagu'), ('type', 'non_alt'), ('trig_img', 'Images/fish.jpg'), ('targ_img', 'Images/fish_pl.jpg'), ('final_c', 'g'), ('new', None), ('num', None), ('instr', None), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'exposure')]), OrderedDict([('trig', 'musapu'), ('targ', 'musab'), ('type', 'alt'), ('trig_img', 'Images/apple_pl.jpg'), ('targ_img', 'Images/apple.jpg'), ('final_c', 'b'), ('new', 'given'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'larupu'), ('targ', 'larub'), ('type', 'alt'), ('trig_img', 'Images/rock_pl.jpg'), ('targ_img', 'Images/rock.jpg'), ('final_c', 'b'), ('new', 'given'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'nalib'), ('targ', 'nalipu'), ('type', 'alt'), ('trig_img', 'Images/coin.jpg'), ('targ_img', 'Images/coin_pl.jpg'), ('final_c', 'b'), ('new', 'given'), ('num', 'pl'), ('instr', 'Write the plural form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'milupu'), ('targ', 'milub'), ('type', 'alt'), ('trig_img', 'Images/soap_pl.jpg'), ('targ_img', 'Images/soap.jpg'), ('final_c', 'b'), ('new', 'given'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'mirab'), ('targ', 'mirapu'), ('type', 'alt'), ('trig_img', 'Images/hammer.jpg'), ('targ_img', 'Images/hammer_pl.jpg'), ('final_c', 'b'), ('new', 'new'), ('num', 'pl'), ('instr', 'Write the plural form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'namab'), ('targ', 'namapu'), ('type', 'alt'), ('trig_img', 'Images/worm.jpg'), ('targ_img', 'Images/worm_pl.jpg'), ('final_c', 'b'), ('new', 'new'), ('num', 'pl'), ('instr', 'Write the plural form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'limipu'), ('targ', 'limib'), ('type', 'alt'), ('trig_img', 'Images/ring_pl.jpg'), ('targ_img', 'Images/ring.jpg'), ('final_c', 'b'), ('new', 'new'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'nirupu'), ('targ', 'nirub'), ('type', 'alt'), ('trig_img', 'Images/glove_pl.jpg'), ('targ_img', 'Images/glove.jpg'), ('final_c', 'b'), ('new', 'new'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'rumutu'), ('targ', 'rumud'), ('type', 'alt'), ('trig_img', 'Images/river_pl.jpg'), ('targ_img', 'Images/river.jpg'), ('final_c', 'd'), ('new', 'given'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'ranutu'), ('targ', 'ranud'), ('type', 'alt'), ('trig_img', 'Images/carpet_pl.jpg'), ('targ_img', 'Images/carpet.jpg'), ('final_c', 'd'), ('new', 'given'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'lunitu'), ('targ', 'lunid'), ('type', 'alt'), ('trig_img', 'Images/ship_pl.jpg'), ('targ_img', 'Images/ship.jpg'), ('final_c', 'd'), ('new', 'given'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'musad'), ('targ', 'musatu'), ('type', 'alt'), ('trig_img', 'Images/foot.jpg'), ('targ_img', 'Images/foot_pl.jpg'), ('final_c', 'd'), ('new', 'given'), ('num', 'pl'), ('instr', 'Write the plural form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'lumutu'), ('targ', 'lumud'), ('type', 'alt'), ('trig_img', 'Images/knife_pl.jpg'), ('targ_img', 'Images/knife.jpg'), ('final_c', 'd'), ('new', 'new'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'silad'), ('targ', 'silatu'), ('type', 'alt'), ('trig_img', 'Images/factory.jpg'), ('targ_img', 'Images/factory_pl.jpg'), ('final_c', 'd'), ('new', 'new'), ('num', 'pl'), ('instr', 'Write the plural form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'nirutu'), ('targ', 'nirud'), ('type', 'alt'), ('trig_img', 'Images/airplane_pl.jpg'), ('targ_img', 'Images/airplane.jpg'), ('final_c', 'd'), ('new', 'new'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'misutu'), ('targ', 'misud'), ('type', 'alt'), ('trig_img', 'Images/bicycle_pl.jpg'), ('targ_img', 'Images/bicycle.jpg'), ('final_c', 'd'), ('new', 'new'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'limiku'), ('targ', 'limig'), ('type', 'alt'), ('trig_img', 'Images/screwdriver_pl.jpg'), ('targ_img', 'Images/screwdriver.jpg'), ('final_c', 'g'), ('new', 'given'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'rimuku'), ('targ', 'rimug'), ('type', 'alt'), ('trig_img', 'Images/door_pl.jpg'), ('targ_img', 'Images/door.jpg'), ('final_c', 'g'), ('new', 'given'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'sunag'), ('targ', 'sunaku'), ('type', 'alt'), ('trig_img', 'Images/nose.jpg'), ('targ_img', 'Images/nose_pl.jpg'), ('final_c', 'g'), ('new', 'given'), ('num', 'pl'), ('instr', 'Write the plural form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'rinaku'), ('targ', 'rinag'), ('type', 'alt'), ('trig_img', 'Images/pen_pl.jpg'), ('targ_img', 'Images/pen.jpg'), ('final_c', 'g'), ('new', 'given'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'misuku'), ('targ', 'misug'), ('type', 'alt'), ('trig_img', 'Images/bell_pl.jpg'), ('targ_img', 'Images/bell.jpg'), ('final_c', 'g'), ('new', 'new'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'susaku'), ('targ', 'susag'), ('type', 'alt'), ('trig_img', 'Images/box_pl.jpg'), ('targ_img', 'Images/box.jpg'), ('final_c', 'g'), ('new', 'new'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'runiku'), ('targ', 'runig'), ('type', 'alt'), ('trig_img', 'Images/shack_pl.jpg'), ('targ_img', 'Images/shack.jpg'), ('final_c', 'g'), ('new', 'new'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'saluku'), ('targ', 'salug'), ('type', 'alt'), ('trig_img', 'Images/thistle_pl.jpg'), ('targ_img', 'Images/thistle.jpg'), ('final_c', 'g'), ('new', 'new'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'narab'), ('targ', 'narabu'), ('type', 'non_alt'), ('trig_img', 'Images/watch.jpg'), ('targ_img', 'Images/watch_pl.jpg'), ('final_c', 'b'), ('new', 'given'), ('num', 'pl'), ('instr', 'Write the plural form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'salibu'), ('targ', 'salib'), ('type', 'non_alt'), ('trig_img', 'Images/circle_pl.jpg'), ('targ_img', 'Images/circle.jpg'), ('final_c', 'b'), ('new', 'new'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'sunudu'), ('targ', 'sunud'), ('type', 'non_alt'), ('trig_img', 'Images/flagpole_pl.jpg'), ('targ_img', 'Images/flagpole.jpg'), ('final_c', 'd'), ('new', 'given'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'ranadu'), ('targ', 'ranad'), ('type', 'non_alt'), ('trig_img', 'Images/person_pl.jpg'), ('targ_img', 'Images/person.jpg'), ('final_c', 'd'), ('new', 'new'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'nuragu'), ('targ', 'nurag'), ('type', 'non_alt'), ('trig_img', 'Images/lion_pl.jpg'), ('targ_img', 'Images/lion.jpg'), ('final_c', 'g'), ('new', 'given'), ('num', 'sg'), ('instr', 'Write the singular form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'nunug'), ('targ', 'nunugu'), ('type', 'non_alt'), ('trig_img', 'Images/zebra.jpg'), ('targ_img', 'Images/zebra_pl.jpg'), ('final_c', 'g'), ('new', 'new'), ('num', 'pl'), ('instr', 'Write the plural form on your keyboard - then press enter'), ('a', None), ('k', None), ('corr', None), ('lang', 'voicing'), ('phase', 'prod')]), OrderedDict([('trig', 'rumab'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/soldier.jpg'), ('targ_img', 'Images/soldier_pl.jpg'), ('final_c', 'b'), ('new', 'given'), ('num', 'pl'), ('instr', 'Choose the plural form of the word that belongs to the language'), ('a', 'rumapu'), ('k', 'rumabu'), ('corr', 'a'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'nasapu'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/spear_pl.jpg'), ('targ_img', 'Images/spear.jpg'), ('final_c', 'b'), ('new', 'given'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'nasap'), ('k', 'nasab'), ('corr', 'k'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'sanub'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/hammock.jpg'), ('targ_img', 'Images/hammock_pl.jpg'), ('final_c', 'b'), ('new', 'given'), ('num', 'pl'), ('instr', 'Choose the plural form of the word that belongs to the language'), ('a', 'sanupu'), ('k', 'sanubu'), ('corr', 'a'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'minupu'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/raindrop_pl.jpg'), ('targ_img', 'Images/raindrop.jpg'), ('final_c', 'b'), ('new', 'given'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'minup'), ('k', 'minub'), ('corr', 'k'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'musupu'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/dog_pl.jpg'), ('targ_img', 'Images/dog.jpg'), ('final_c', 'b'), ('new', 'new'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'musub'), ('k', 'musup'), ('corr', 'a'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'sinapu'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/tree_pl.jpg'), ('targ_img', 'Images/tree.jpg'), ('final_c', 'b'), ('new', 'new'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'sinap'), ('k', 'sinab'), ('corr', 'k'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'munipu'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/calender_pl.jpg'), ('targ_img', 'Images/calender.jpg'), ('final_c', 'b'), ('new', 'new'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'munib'), ('k', 'munip'), ('corr', 'a'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'murapu'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/mouse_pl.jpg'), ('targ_img', 'Images/mouse.jpg'), ('final_c', 'b'), ('new', 'new'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'murap'), ('k', 'murab'), ('corr', 'k'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'nurad'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/copier.jpg'), ('targ_img', 'Images/copier_pl.jpg'), ('final_c', 'd'), ('new', 'given'), ('num', 'pl'), ('instr', 'Choose the plural form of the word that belongs to the language'), ('a', 'nuratu'), ('k', 'nuradu'), ('corr', 'a'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'salitu'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/balloon_pl.jpg'), ('targ_img', 'Images/balloon.jpg'), ('final_c', 'd'), ('new', 'given'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'salit'), ('k', 'salid'), ('corr', 'k'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'milud'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/banana_pl.jpg'), ('targ_img', 'Images/banana.jpg'), ('final_c', 'd'), ('new', 'given'), ('num', 'pl'), ('instr', 'Choose the plural form of the word that belongs to the language'), ('a', 'milutu'), ('k', 'miludu'), ('corr', 'a'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'naritu'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/squid_pl.jpg'), ('targ_img', 'Images/squid.jpg'), ('final_c', 'd'), ('new', 'given'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'narit'), ('k', 'narid'), ('corr', 'k'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'lulutu'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/shovel_pl.jpg'), ('targ_img', 'Images/shovel.jpg'), ('final_c', 'd'), ('new', 'new'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'lulud'), ('k', 'lulut'), ('corr', 'a'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'lilitu'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/hamburger_pl.jpg'), ('targ_img', 'Images/hamburger.jpg'), ('final_c', 'd'), ('new', 'new'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'lilit'), ('k', 'lilid'), ('corr', 'k'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'runatu'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/bag_pl.jpg'), ('targ_img', 'Images/bag.jpg'), ('final_c', 'd'), ('new', 'new'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'runad'), ('k', 'runat'), ('corr', 'a'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'limutu'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/tank_pl.jpg'), ('targ_img', 'Images/tank.jpg'), ('final_c', 'd'), ('new', 'new'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'limut'), ('k', 'limud'), ('corr', 'k'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'nurug'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/clarinet.jpg'), ('targ_img', 'Images/clarinet_pl.jpg'), ('final_c', 'g'), ('new', 'given'), ('num', 'pl'), ('instr', 'Choose the plural form of the word that belongs to the language'), ('a', 'nuruku'), ('k', 'nurugu'), ('corr', 'a'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'sumaku'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/maracas_pl.jpg'), ('targ_img', 'Images/maracas.jpg'), ('final_c', 'g'), ('new', 'given'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'sumak'), ('k', 'sumag'), ('corr', 'k'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'rimaku'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/bottle_pl.jpg'), ('targ_img', 'Images/bottle.jpg'), ('final_c', 'g'), ('new', 'given'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'rimag'), ('k', 'rimak'), ('corr', 'a'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'niruku'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/garbage_can_pl.jpg'), ('targ_img', 'Images/garbage_can.jpg'), ('final_c', 'g'), ('new', 'given'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'niruk'), ('k', 'nirug'), ('corr', 'k'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'rusuku'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/cat_pl.jpg'), ('targ_img', 'Images/cat.jpg'), ('final_c', 'g'), ('new', 'new'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'rusug'), ('k', 'rusuk'), ('corr', 'a'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'maniku'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/hoover_pl.jpg'), ('targ_img', 'Images/hoover.jpg'), ('final_c', 'g'), ('new', 'new'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'manik'), ('k', 'manig'), ('corr', 'k'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'liliku'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/feather_pl.jpg'), ('targ_img', 'Images/feather.jpg'), ('final_c', 'g'), ('new', 'new'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'lilig'), ('k', 'lilik'), ('corr', 'a'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'lisag'), ('targ', None), ('type', 'alt'), ('trig_img', 'Images/flower.jpg'), ('targ_img', 'Images/flower_pl.jpg'), ('final_c', 'g'), ('new', 'new'), ('num', 'pl'), ('instr', 'Choose the plural form of the word that belongs to the language'), ('a', 'lisaku'), ('k', 'lisagu'), ('corr', 'k'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'nulib'), ('targ', None), ('type', 'non_alt'), ('trig_img', 'Images/computer.jpg'), ('targ_img', 'Images/computer_pl.jpg'), ('final_c', 'b'), ('new', 'given'), ('num', 'pl'), ('instr', 'Choose the plural form of the word that belongs to the language'), ('a', 'nulibu'), ('k', 'nulipu'), ('corr', 'a'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'nanabu'), ('targ', None), ('type', 'non_alt'), ('trig_img', 'Images/sun_pl.jpg'), ('targ_img', 'Images/sun.jpg'), ('final_c', 'b'), ('new', 'new'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'narap'), ('k', 'nanab'), ('corr', 'k'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'lisudu'), ('targ', None), ('type', 'non_alt'), ('trig_img', 'Images/statue_pl.jpg'), ('targ_img', 'Images/statue.jpg'), ('final_c', 'd'), ('new', 'given'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'lisud'), ('k', 'lisut'), ('corr', 'a'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'nunidu'), ('targ', None), ('type', 'non_alt'), ('trig_img', 'Images/car_pl.jpg'), ('targ_img', 'Images/car.jpg'), ('final_c', 'd'), ('new', 'new'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'nunit'), ('k', 'nunid'), ('corr', 'k'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'malugu'), ('targ', None), ('type', 'non_alt'), ('trig_img', 'Images/necklace_pl.jpg'), ('targ_img', 'Images/necklace.jpg'), ('final_c', 'g'), ('new', 'given'), ('num', 'sg'), ('instr', 'Choose the singular form of the word that belongs to the language'), ('a', 'malug'), ('k', 'maluk'), ('corr', 'a'), ('lang', 'voicing'), ('phase', 'FC')]), OrderedDict([('trig', 'lusag'), ('targ', None), ('type', 'non_alt'), ('trig_img', 'Images/helicopter_pl.jpg'), ('targ_img', 'Images/helicopter.jpg'), ('final_c', 'g'), ('new', 'new'), ('num', 'pl'), ('instr', 'Choose the plural form of the word that belongs to the language'), ('a', 'lusagu'), ('k', 'lusaku'), ('corr', 'k'), ('lang', 'voicing'), ('phase', 'FC')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="Lists\voicing.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="trials_3" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="Test_FC"/>
    <Routine name="ISI_1sec"/>
    <LoopTerminator name="trials_3"/>
    <Routine name="Thank_you"/>
  </Flow>
</PsychoPy2experiment>
