<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="3.0.0">
  <Settings>
    <Param name="Completed URL" updates="None" val="" valType="str"/>
    <Param name="Data filename" updates="None" val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code"/>
    <Param name="Enable Escape" updates="None" val="True" valType="bool"/>
    <Param name="Experiment info" updates="None" val="{'participant': '', 'session': '001'}" valType="code"/>
    <Param name="Force stereo" updates="None" val="True" valType="bool"/>
    <Param name="Full-screen window" updates="None" val="True" valType="bool"/>
    <Param name="HTML path" updates="None" val="html" valType="str"/>
    <Param name="Incomplete URL" updates="None" val="" valType="str"/>
    <Param name="JS libs" updates="None" val="packaged" valType="str"/>
    <Param name="Monitor" updates="None" val="testMonitor" valType="str"/>
    <Param name="Save csv file" updates="None" val="False" valType="bool"/>
    <Param name="Save excel file" updates="None" val="False" valType="bool"/>
    <Param name="Save log file" updates="None" val="True" valType="bool"/>
    <Param name="Save psydat file" updates="None" val="True" valType="bool"/>
    <Param name="Save wide csv file" updates="None" val="True" valType="bool"/>
    <Param name="Screen" updates="None" val="1" valType="num"/>
    <Param name="Show info dlg" updates="None" val="True" valType="bool"/>
    <Param name="Show mouse" updates="None" val="False" valType="bool"/>
    <Param name="Units" updates="None" val="use prefs" valType="str"/>
    <Param name="Use version" updates="None" val="" valType="str"/>
    <Param name="Window size (pixels)" updates="None" val="[1920, 1080]" valType="code"/>
    <Param name="blendMode" updates="None" val="avg" valType="str"/>
    <Param name="color" updates="None" val="$[1.000,1.000,1.000]" valType="str"/>
    <Param name="colorSpace" updates="None" val="rgb" valType="str"/>
    <Param name="expName" updates="None" val="experiment2_b" valType="str"/>
    <Param name="exportHTML" updates="None" val="on Sync" valType="str"/>
    <Param name="logging level" updates="None" val="exp" valType="code"/>
  </Settings>
  <Routines>
    <Routine name="Instruction_Intro">
      <KeyboardComponent name="key_resp_1">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_1" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <ImageComponent name="lub">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="Images/Instruction_Screen.png" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="lub" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="size" updates="constant" val="(2, 2)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
    </Routine>
    <Routine name="Exposure">
      <TextComponent name="Instr">
        <Param name="color" updates="constant" val="$[-1.000,-1.000,-1.000]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>
        <Param name="name" updates="None" val="Instr" valType="code"/>
        <Param name="opacity" updates="constant" val="0.95" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="Say the words you see out loud" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <ImageComponent name="Sing_img">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$Picture" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="Sing_img" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="size" updates="constant" val="" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="3" valType="code"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <ImageComponent name="Pl_img">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$Picture_pl" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="Pl_img" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="size" updates="constant" val="" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="3" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="3" valType="code"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <TextComponent name="Sing_txt">
        <Param name="color" updates="constant" val="$[1.000,-1.000,-1.000]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.3" valType="code"/>
        <Param name="name" updates="None" val="Sing_txt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.5)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="3" valType="code"/>
        <Param name="text" updates="set every repeat" val="$Singular" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="Pl_txt">
        <Param name="color" updates="constant" val="$[1.000,-1.000,-1.000]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.3" valType="code"/>
        <Param name="name" updates="None" val="Pl_txt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.5)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="3" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="3" valType="code"/>
        <Param name="text" updates="set every repeat" val="$Plural" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="Instruction_Prod">
      <ImageComponent name="image_3">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="Images/Instruction_Screen_Prod.png" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="image_3" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="size" updates="constant" val="(2, 2)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp_2">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_2" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Test_Prod">
      <TextComponent name="Trigger_ins1">
        <Param name="color" updates="constant" val="$[-1.000,-1.000,-1.000]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="Trigger_ins1" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="5" valType="code"/>
        <Param name="text" updates="constant" val="Read the word out loud" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="Target_ins1">
        <Param name="color" updates="constant" val="$[-1.000,-1.000,-1.000]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="Target_ins1" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="text" updates="constant" val="Write down the singular form - then press ENTER" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <ImageComponent name="Trigger_img1">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$Trigger_img" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="Trigger_img1" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="size" updates="constant" val="" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="5" valType="code"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <ImageComponent name="Target_img1">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$Target_img" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="Target_img1" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="size" updates="constant" val="" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <TextComponent name="Trigger_txt1">
        <Param name="color" updates="constant" val="$[1.000,-1.000,-1.000]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.3" valType="code"/>
        <Param name="name" updates="None" val="Trigger_txt1" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.5)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="5" valType="code"/>
        <Param name="text" updates="set every repeat" val="$Trigger_txt" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="textinput">
        <Param name="Begin Experiment" updates="constant" val="inputText = &quot;&quot;" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="theseKeys=&quot;&quot;&amp;#10;shift_flag = False&amp;#10;txtinp.alignHoriz ='center'" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="n= len(theseKeys)&amp;#10;i = 0&amp;#10;while i &lt; n:&amp;#10;&amp;#10;    if theseKeys[i] == 'return' and len(inputText) &gt;1:&amp;#10;        # pressing RETURN means time to stop&amp;#10;        continueRoutine = False&amp;#10;        break&amp;#10;&amp;#10;    elif theseKeys[i] == 'backspace':&amp;#10;        inputText = inputText[:-1]  # lose the final character&amp;#10;        i = i + 1&amp;#10;&amp;#10;    elif theseKeys[i] == 'space':&amp;#10;        inputText += ' '&amp;#10;        i = i + 1&amp;#10;&amp;#10;    elif theseKeys[i] in ['lshift', 'rshift']:&amp;#10;        shift_flag = True&amp;#10;        i = i + 1&amp;#10;&amp;#10;    else:&amp;#10;        if len(theseKeys[i]) == 1:&amp;#10;            # we only have 1 char so should be a normal key, &amp;#10;            # otherwise it might be 'ctrl' or similar so ignore it&amp;#10;            if shift_flag:&amp;#10;                inputText += chr( ord(theseKeys[i]) - ord(' '))&amp;#10;                shift_flag = False&amp;#10;            else:&amp;#10;                inputText += theseKeys[i]&amp;#10;&amp;#10;        i = i + 1&amp;#10;" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="# let's store the final text string into the results finle...&amp;#10;thisExp.addData('inputText', inputText)&amp;#10;inputText=&quot;&quot;" valType="extendedCode"/>
        <Param name="name" updates="None" val="textinput" valType="code"/>
      </CodeComponent>
      <TextComponent name="txtinp">
        <Param name="color" updates="constant" val="$[1.000,-1.000,-1.000]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.3" valType="code"/>
        <Param name="name" updates="None" val="txtinp" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.5)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="text" updates="set every frame" val="$inputText" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="text_resp">
        <Param name="allowedKeys" updates="constant" val="" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="name" updates="None" val="text_resp" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="all keys" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="ISI_1sec">
      <StaticComponent name="ISI_2">
        <Param name="code" updates="None" val="" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="name" updates="None" val="ISI_2" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="0.75" valType="code"/>
      </StaticComponent>
    </Routine>
    <Routine name="Instruction_FC">
      <ImageComponent name="image_6">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="Images/Instruction_Screen_FC.png" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="image_6" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="size" updates="constant" val="(2, 2)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp_4">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_4" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Test_FC">
      <TextComponent name="Trigger_ins2">
        <Param name="color" updates="constant" val="$[-1.000,-1.000,-1.000]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="Trigger_ins2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="4" valType="code"/>
        <Param name="text" updates="constant" val="Repeat the word you see" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="Target_ins2">
        <Param name="color" updates="constant" val="$[-1.000,-1.000,-1.000]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="Target_ins2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="4" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="text" updates="constant" val="Choose the form of the singular you believe is found in the language" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <ImageComponent name="Trigger_img2">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$Trigger_img" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="Trigger_img2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="size" updates="constant" val="" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="4" valType="code"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <ImageComponent name="Target_img2">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$Target_img" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="Target_img2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="size" updates="constant" val="" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="4" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <TextComponent name="Trigger_txt2">
        <Param name="color" updates="constant" val="$[1.000,-1.000,-1.000]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.3" valType="code"/>
        <Param name="name" updates="None" val="Trigger_txt2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.5)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="4" valType="code"/>
        <Param name="text" updates="set every repeat" val="$Trigger_txt" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="Target_instr_l">
        <Param name="color" updates="constant" val="$[-1.000,-1.000,-1.000]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>
        <Param name="name" updates="None" val="Target_instr_l" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(-0.5, -0.8)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="4" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="text" updates="constant" val="Press a&amp;#10;&amp;#10;" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="Target_instr_r">
        <Param name="color" updates="constant" val="$[-1.000,-1.000,-1.000]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.08" valType="code"/>
        <Param name="name" updates="None" val="Target_instr_r" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.5, -0.7)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="4" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="text" updates="constant" val="Press k" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="FC_resp">
        <Param name="allowedKeys" updates="constant" val="'a','k'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="FC_resp" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="4" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="Resp_a">
        <Param name="color" updates="constant" val="$[1.000,-1.000,-1.000]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.3" valType="code"/>
        <Param name="name" updates="None" val="Resp_a" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(-0.5, -0.5)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="4" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="text" updates="set every repeat" val="$Corr" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="Resp_b">
        <Param name="color" updates="constant" val="$[1.000,-1.000,-1.000]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.3" valType="code"/>
        <Param name="name" updates="None" val="Resp_b" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.5, -0.5)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="4" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="text" updates="set every repeat" val="$Incorr" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="Exposure_2">
      <ImageComponent name="image">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$Picture" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="image" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="size" updates="constant" val="" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.0" valType="code"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
    </Routine>
    <Routine name="Exposure_3">
      <ImageComponent name="image_2">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$Picture_pl" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="image_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="size" updates="constant" val="" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.0" valType="code"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="Instruction_Intro"/>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="Selected rows" updates="None" val="0:3" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="Lists/Experiment_Word_list_voicing.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="Exposure"/>
    <Routine name="ISI_1sec"/>
    <LoopTerminator name="trials"/>
    <Routine name="Instruction_Prod"/>
    <LoopInitiator loopType="TrialHandler" name="trials_2">
      <Param name="Selected rows" updates="None" val="0:1" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('Trigger_txt', 'musapu'), ('Target_txt', 'musab'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/apple.jpg'), ('Trigger_img', 'Images/apple_pl.jpg')]), OrderedDict([('Trigger_txt', 'larupu'), ('Target_txt', 'larub'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/rock.jpg'), ('Trigger_img', 'Images/rock_pl.jpg')]), OrderedDict([('Trigger_txt', 'rumutu'), ('Target_txt', 'rumud'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/river.jpg'), ('Trigger_img', 'Images/river_pl.jpg')]), OrderedDict([('Trigger_txt', 'limiku'), ('Target_txt', 'limig'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/screwdriver.jpg'), ('Trigger_img', 'Images/screwdriver_pl.jpg')]), OrderedDict([('Trigger_txt', 'nalipu'), ('Target_txt', 'nalib'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/coin.jpg'), ('Trigger_img', 'Images/coin_pl.jpg')]), OrderedDict([('Trigger_txt', 'ranutu'), ('Target_txt', 'ranud'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/carpet.jpg'), ('Trigger_img', 'Images/carpet_pl.jpg')]), OrderedDict([('Trigger_txt', 'rimuku'), ('Target_txt', 'rimug'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/door.jpg'), ('Trigger_img', 'Images/door_pl.jpg')]), OrderedDict([('Trigger_txt', 'sunaku'), ('Target_txt', 'sunag'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/nose.jpg'), ('Trigger_img', 'Images/nose_pl.jpg')]), OrderedDict([('Trigger_txt', 'rinaku'), ('Target_txt', 'rinag'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/pen.jpg'), ('Trigger_img', 'Images/pen_pl.jpg')]), OrderedDict([('Trigger_txt', 'lunitu'), ('Target_txt', 'lunid'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/ship.jpg'), ('Trigger_img', 'Images/ship_pl.jpg')]), OrderedDict([('Trigger_txt', 'musatu'), ('Target_txt', 'musad'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/foot.jpg'), ('Trigger_img', 'Images/foot_pl.jpg')]), OrderedDict([('Trigger_txt', 'milupu'), ('Target_txt', 'milub'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/soap.jpg'), ('Trigger_img', 'Images/soap_pl.jpg')]), OrderedDict([('Trigger_txt', 'nuruku'), ('Target_txt', 'nurug'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/clarinet.jpg'), ('Trigger_img', 'Images/clarinet_pl.jpg')]), OrderedDict([('Trigger_txt', 'rumapu'), ('Target_txt', 'rumab'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/soldier.jpg'), ('Trigger_img', 'Images/soldier_pl.jpg')]), OrderedDict([('Trigger_txt', 'nasapu'), ('Target_txt', 'nasab'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/spear.jpg'), ('Trigger_img', 'Images/spear_pl.jpg')]), OrderedDict([('Trigger_txt', 'nuratu'), ('Target_txt', 'nurad'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/copier.jpg'), ('Trigger_img', 'Images/copier_pl.jpg')]), OrderedDict([('Trigger_txt', 'sanupu'), ('Target_txt', 'sanub'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/hammock.jpg'), ('Trigger_img', 'Images/hammock_pl.jpg')]), OrderedDict([('Trigger_txt', 'sumaku'), ('Target_txt', 'sumag'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/maracas.jpg'), ('Trigger_img', 'Images/maracas_pl.jpg')]), OrderedDict([('Trigger_txt', 'minupu'), ('Target_txt', 'minub'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/raindrop.jpg'), ('Trigger_img', 'Images/raindrop_pl.jpg')]), OrderedDict([('Trigger_txt', 'nimupu'), ('Target_txt', 'nimub'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/hand.jpg'), ('Trigger_img', 'Images/hand_pl.jpg')]), OrderedDict([('Trigger_txt', 'salitu'), ('Target_txt', 'salid'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/balloon.jpg'), ('Trigger_img', 'Images/balloon_pl.jpg')]), OrderedDict([('Trigger_txt', 'milutu'), ('Target_txt', 'milud'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/banana.jpg'), ('Trigger_img', 'Images/banana_pl.jpg')]), OrderedDict([('Trigger_txt', 'naritu'), ('Target_txt', 'narid'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/squid.jpg'), ('Trigger_img', 'Images/squid_pl.jpg')]), OrderedDict([('Trigger_txt', 'liritu'), ('Target_txt', 'lirid'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/bridge.jpg'), ('Trigger_img', 'Images/bridge_pl.jpg')]), OrderedDict([('Trigger_txt', 'masitu'), ('Target_txt', 'masid'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/thermometer.jpg'), ('Trigger_img', 'Images/thermometer_pl.jpg')]), OrderedDict([('Trigger_txt', 'rimaku'), ('Target_txt', 'rimag'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/bottle.jpg'), ('Trigger_img', 'Images/bottle_pl.jpg')]), OrderedDict([('Trigger_txt', 'silutu'), ('Target_txt', 'silud'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/moustache.jpg'), ('Trigger_img', 'Images/moustache_pl.jpg')]), OrderedDict([('Trigger_txt', 'rimapu'), ('Target_txt', 'rimab'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/bean.jpg'), ('Trigger_img', 'Images/bean_pl.jpg')]), OrderedDict([('Trigger_txt', 'misapu'), ('Target_txt', 'misab'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/rainbow.jpg'), ('Trigger_img', 'Images/rainbow_pl.jpg')]), OrderedDict([('Trigger_txt', 'lumutu'), ('Target_txt', 'lumud'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/knife.jpg'), ('Trigger_img', 'Images/knife_pl.jpg')]), OrderedDict([('Trigger_txt', 'mirapu'), ('Target_txt', 'mirab'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/hammer.jpg'), ('Trigger_img', 'Images/hammer_pl.jpg')]), OrderedDict([('Trigger_txt', 'namapu'), ('Target_txt', 'namab'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/worm.jpg'), ('Trigger_img', 'Images/worm_pl.jpg')]), OrderedDict([('Trigger_txt', 'limipu'), ('Target_txt', 'limib'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/ring.jpg'), ('Trigger_img', 'Images/ring_pl.jpg')]), OrderedDict([('Trigger_txt', 'niruku'), ('Target_txt', 'nirug'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/garbage_can.jpg'), ('Trigger_img', 'Images/garbage_can_pl.jpg')]), OrderedDict([('Trigger_txt', 'namaku'), ('Target_txt', 'namag'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/anvil.jpg'), ('Trigger_img', 'Images/anvil_pl.jpg')]), OrderedDict([('Trigger_txt', 'runuku'), ('Target_txt', 'runug'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/cup.jpg'), ('Trigger_img', 'Images/cup_pl.jpg')]), OrderedDict([('Trigger_txt', 'silatu'), ('Target_txt', 'silad'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/factory.jpg'), ('Trigger_img', 'Images/factory_pl.jpg')]), OrderedDict([('Trigger_txt', 'samuku'), ('Target_txt', 'samug'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/sleigh.jpg'), ('Trigger_img', 'Images/sleigh_pl.jpg')]), OrderedDict([('Trigger_txt', 'misuku'), ('Target_txt', 'misug'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/bell.jpg'), ('Trigger_img', 'Images/bell_pl.jpg')]), OrderedDict([('Trigger_txt', 'nirupu'), ('Target_txt', 'nirub'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/glove.jpg'), ('Trigger_img', 'Images/glove_pl.jpg')]), OrderedDict([('Trigger_txt', 'musupu'), ('Target_txt', 'musub'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/dog.jpg'), ('Trigger_img', 'Images/dog_pl.jpg')]), OrderedDict([('Trigger_txt', 'susaku'), ('Target_txt', 'susag'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/box.jpg'), ('Trigger_img', 'Images/box_pl.jpg')]), OrderedDict([('Trigger_txt', 'runiku'), ('Target_txt', 'runig'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/shack.jpg'), ('Trigger_img', 'Images/shack_pl.jpg')]), OrderedDict([('Trigger_txt', 'saluku'), ('Target_txt', 'salug'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/thistle.jpg'), ('Trigger_img', 'Images/thistle_pl.jpg')]), OrderedDict([('Trigger_txt', 'sinapu'), ('Target_txt', 'sinab'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/tree.jpg'), ('Trigger_img', 'Images/tree_pl.jpg')]), OrderedDict([('Trigger_txt', 'rusuku'), ('Target_txt', 'rusug'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/cat.jpg'), ('Trigger_img', 'Images/cat_pl.jpg')]), OrderedDict([('Trigger_txt', 'nirutu'), ('Target_txt', 'nirud'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/airplane.jpg'), ('Trigger_img', 'Images/airplane_pl.jpg')]), OrderedDict([('Trigger_txt', 'munipu'), ('Target_txt', 'munib'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/calender.jpg'), ('Trigger_img', 'Images/calender_pl.jpg')]), OrderedDict([('Trigger_txt', 'murapu'), ('Target_txt', 'murab'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/mouse.jpg'), ('Trigger_img', 'Images/mouse_pl.jpg')]), OrderedDict([('Trigger_txt', 'nalupu'), ('Target_txt', 'nalub'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/horse.jpg'), ('Trigger_img', 'Images/horse_pl.jpg')]), OrderedDict([('Trigger_txt', 'masapu'), ('Target_txt', 'masab'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/chocolate_bar.jpg'), ('Trigger_img', 'Images/chocolate_bar_pl.jpg')]), OrderedDict([('Trigger_txt', 'misutu'), ('Target_txt', 'misud'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/bicycle.jpg'), ('Trigger_img', 'Images/bicycle_pl.jpg')]), OrderedDict([('Trigger_txt', 'maniku'), ('Target_txt', 'manig'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/hoover.jpg'), ('Trigger_img', 'Images/hoover_pl.jpg')]), OrderedDict([('Trigger_txt', 'lulutu'), ('Target_txt', 'lulud'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/shovel.jpg'), ('Trigger_img', 'Images/shovel_pl.jpg')]), OrderedDict([('Trigger_txt', 'lilitu'), ('Target_txt', 'lilid'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/hamburger.jpg'), ('Trigger_img', 'Images/hamburger_pl.jpg')]), OrderedDict([('Trigger_txt', 'runatu'), ('Target_txt', 'runad'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/bag.jpg'), ('Trigger_img', 'Images/bag_pl.jpg')]), OrderedDict([('Trigger_txt', 'liliku'), ('Target_txt', 'lilig'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/feather.jpg'), ('Trigger_img', 'Images/feather_pl.jpg')]), OrderedDict([('Trigger_txt', 'rusipu'), ('Target_txt', 'rusib'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/duck.jpg'), ('Trigger_img', 'Images/duck_pl.jpg')]), OrderedDict([('Trigger_txt', 'lisaku'), ('Target_txt', 'lisag'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/flower.jpg'), ('Trigger_img', 'Images/flower_pl.jpg')]), OrderedDict([('Trigger_txt', 'susapu'), ('Target_txt', 'susab'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/dolphin.jpg'), ('Trigger_img', 'Images/dolphin_pl.jpg')]), OrderedDict([('Trigger_txt', 'limutu'), ('Target_txt', 'limud'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/tank.jpg'), ('Trigger_img', 'Images/tank_pl.jpg')]), OrderedDict([('Trigger_txt', 'niliku'), ('Target_txt', 'nilig'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/eye.jpg'), ('Trigger_img', 'Images/eye_pl.jpg')]), OrderedDict([('Trigger_txt', 'linaku'), ('Target_txt', 'linag'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/skyscraper.jpg'), ('Trigger_img', 'Images/skyscraper_pl.jpg')]), OrderedDict([('Trigger_txt', 'malitu'), ('Target_txt', 'malid'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/fork.jpg'), ('Trigger_img', 'Images/fork_pl.jpg')]), OrderedDict([('Trigger_txt', 'ninaku'), ('Target_txt', 'ninag'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/heart.jpg'), ('Trigger_img', 'Images/heart_pl.jpg')]), OrderedDict([('Trigger_txt', 'ranuku'), ('Target_txt', 'ranug'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/pill.jpg'), ('Trigger_img', 'Images/pill_pl.jpg')]), OrderedDict([('Trigger_txt', 'maruku'), ('Target_txt', 'marug'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/mirror.jpg'), ('Trigger_img', 'Images/mirror_pl.jpg')]), OrderedDict([('Trigger_txt', 'risapu'), ('Target_txt', 'risab'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/lightbulb.jpg'), ('Trigger_img', 'Images/lightbulb_pl.jpg')]), OrderedDict([('Trigger_txt', 'mulitu'), ('Target_txt', 'mulid'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/forklift.jpg'), ('Trigger_img', 'Images/forklift_pl.jpg')]), OrderedDict([('Trigger_txt', 'sunipu'), ('Target_txt', 'sunib'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/seagull.jpg'), ('Trigger_img', 'Images/seagull_pl.jpg')]), OrderedDict([('Trigger_txt', 'saratu'), ('Target_txt', 'sarad'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/guitar.jpg'), ('Trigger_img', 'Images/guitar_pl.jpg')]), OrderedDict([('Trigger_txt', 'lusipu'), ('Target_txt', 'lusib'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/window.jpg'), ('Trigger_img', 'Images/window_pl.jpg')]), OrderedDict([('Trigger_txt', 'muriku'), ('Target_txt', 'murig'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/cow.jpg'), ('Trigger_img', 'Images/cow_pl.jpg')]), OrderedDict([('Trigger_txt', 'lasapu'), ('Target_txt', 'lasab'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/wig.jpg'), ('Trigger_img', 'Images/wig_pl.jpg')]), OrderedDict([('Trigger_txt', 'murupu'), ('Target_txt', 'murub'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/beer.jpg'), ('Trigger_img', 'Images/beer_pl.jpg')]), OrderedDict([('Trigger_txt', 'lanitu'), ('Target_txt', 'lanid'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/helmet.jpg'), ('Trigger_img', 'Images/helmet_pl.jpg')]), OrderedDict([('Trigger_txt', 'ralatu'), ('Target_txt', 'ralad'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/magnifying_glass.jpg'), ('Trigger_img', 'Images/magnifying_glass_pl.jpg')]), OrderedDict([('Trigger_txt', 'nanatu'), ('Target_txt', 'nanad'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/table.jpg'), ('Trigger_img', 'Images/table_pl.jpg')]), OrderedDict([('Trigger_txt', 'sanapu'), ('Target_txt', 'sanab'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/t-shirt.jpg'), ('Trigger_img', 'Images/t-shirt_pl.jpg')]), OrderedDict([('Trigger_txt', 'lanupu'), ('Target_txt', 'lanub'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/football.jpg'), ('Trigger_img', 'Images/football_pl.jpg')]), OrderedDict([('Trigger_txt', 'nimapu'), ('Target_txt', 'nimab'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/brick.jpg'), ('Trigger_img', 'Images/brick_pl.jpg')]), OrderedDict([('Trigger_txt', 'niripu'), ('Target_txt', 'nirib'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/newspaper.jpg'), ('Trigger_img', 'Images/newspaper_pl.jpg')]), OrderedDict([('Trigger_txt', 'nilapu'), ('Target_txt', 'nilab'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/mailbox.jpg'), ('Trigger_img', 'Images/mailbox_pl.jpg')]), OrderedDict([('Trigger_txt', 'ranipu'), ('Target_txt', 'ranib'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/peacock.jpg'), ('Trigger_img', 'Images/peacock_pl.jpg')]), OrderedDict([('Trigger_txt', 'mariku'), ('Target_txt', 'marig'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/doctor.jpg'), ('Trigger_img', 'Images/doctor_pl.jpg')]), OrderedDict([('Trigger_txt', 'lariku'), ('Target_txt', 'larig'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/priest.jpg'), ('Trigger_img', 'Images/priest_pl.jpg')]), OrderedDict([('Trigger_txt', 'lamiku'), ('Target_txt', 'lamig'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/submarine.jpg'), ('Trigger_img', 'Images/submarine_pl.jpg')]), OrderedDict([('Trigger_txt', 'siluku'), ('Target_txt', 'silug'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/toe.jpg'), ('Trigger_img', 'Images/toe_pl.jpg')]), OrderedDict([('Trigger_txt', 'muruku'), ('Target_txt', 'murug'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/shoe.jpg'), ('Trigger_img', 'Images/shoe_pl.jpg')]), OrderedDict([('Trigger_txt', 'rusapu'), ('Target_txt', 'rusab'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/blackboard.jpg'), ('Trigger_img', 'Images/blackboard_pl.jpg')]), OrderedDict([('Trigger_txt', 'rusaku'), ('Target_txt', 'rusag'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/radio.jpg'), ('Trigger_img', 'Images/radio_pl.jpg')]), OrderedDict([('Trigger_txt', 'miratu'), ('Target_txt', 'mirad'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/greenhouse.jpg'), ('Trigger_img', 'Images/greenhouse_pl.jpg')]), OrderedDict([('Trigger_txt', 'linatu'), ('Target_txt', 'linad'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/party.jpg Images/hat.jpg'), ('Trigger_img', 'Images/party_pl.jpg Images/hat_pl.jpg')]), OrderedDict([('Trigger_txt', 'mumitu'), ('Target_txt', 'mumid'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/loudspeaker.jpg'), ('Trigger_img', 'Images/loudspeaker_pl.jpg')]), OrderedDict([('Trigger_txt', 'marapu'), ('Target_txt', 'marab'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/plate.jpg'), ('Trigger_img', 'Images/plate_pl.jpg')]), OrderedDict([('Trigger_txt', 'rumidu'), ('Target_txt', 'rumid'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 1), ('Target_img', 'Images/mushroom.jpg'), ('Trigger_img', 'Images/mushroom_pl.jpg')]), OrderedDict([('Trigger_txt', 'lisudu'), ('Target_txt', 'lisud'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 1), ('Target_img', 'Images/statue.jpg'), ('Trigger_img', 'Images/statue_pl.jpg')]), OrderedDict([('Trigger_txt', 'narabu'), ('Target_txt', 'narab'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 1), ('Target_img', 'Images/watch.jpg'), ('Trigger_img', 'Images/watch_pl.jpg')]), OrderedDict([('Trigger_txt', 'nulibu'), ('Target_txt', 'nulib'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 1), ('Target_img', 'Images/computer.jpg'), ('Trigger_img', 'Images/computer_pl.jpg')]), OrderedDict([('Trigger_txt', 'nuragu'), ('Target_txt', 'nurag'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 1), ('Target_img', 'Images/lion.jpg'), ('Trigger_img', 'Images/lion_pl.jpg')]), OrderedDict([('Trigger_txt', 'surudu'), ('Target_txt', 'surud'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 1), ('Target_img', 'Images/book.jpg'), ('Trigger_img', 'Images/book_pl.jpg')]), OrderedDict([('Trigger_txt', 'salibu'), ('Target_txt', 'salib'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 1), ('Target_img', 'Images/circle.jpg'), ('Trigger_img', 'Images/circle_pl.jpg')]), OrderedDict([('Trigger_txt', 'nunidu'), ('Target_txt', 'nunid'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 1), ('Target_img', 'Images/car.jpg'), ('Trigger_img', 'Images/car_pl.jpg')]), OrderedDict([('Trigger_txt', 'nanabu'), ('Target_txt', 'nanab'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 1), ('Target_img', 'Images/sun.jpg'), ('Trigger_img', 'Images/sun_pl.jpg')]), OrderedDict([('Trigger_txt', 'sisubu'), ('Target_txt', 'sisub'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 1), ('Target_img', 'Images/pot.jpg'), ('Trigger_img', 'Images/pot_pl.jpg')]), OrderedDict([('Trigger_txt', 'sunudu'), ('Target_txt', 'sunud'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 1), ('Target_img', 'Images/flagpole.jpg'), ('Trigger_img', 'Images/flagpole_pl.jpg')]), OrderedDict([('Trigger_txt', 'numubu'), ('Target_txt', 'numub'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 1), ('Target_img', 'Images/jacket.jpg'), ('Trigger_img', 'Images/jacket_pl.jpg')]), OrderedDict([('Trigger_txt', 'malugu'), ('Target_txt', 'malug'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 1), ('Target_img', 'Images/necklace.jpg'), ('Trigger_img', 'Images/necklace_pl.jpg')]), OrderedDict([('Trigger_txt', 'lanibu'), ('Target_txt', 'lanib'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 1), ('Target_img', 'Images/bush.jpg'), ('Trigger_img', 'Images/bush_pl.jpg')]), OrderedDict([('Trigger_txt', 'sanagu'), ('Target_txt', 'sanag'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 1), ('Target_img', 'Images/fish.jpg'), ('Trigger_img', 'Images/fish_pl.jpg')]), OrderedDict([('Trigger_txt', 'mamadu'), ('Target_txt', 'mamad'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 1), ('Target_img', 'Images/ice-cream.jpg'), ('Trigger_img', 'Images/ice-cream_pl.jpg')]), OrderedDict([('Trigger_txt', 'nunugu'), ('Target_txt', 'nunug'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 1), ('Target_img', 'Images/zebra.jpg'), ('Trigger_img', 'Images/zebra_pl.jpg')]), OrderedDict([('Trigger_txt', 'misubu'), ('Target_txt', 'misub'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 1), ('Target_img', 'Images/microphone.jpg'), ('Trigger_img', 'Images/microphone_pl.jpg')]), OrderedDict([('Trigger_txt', 'muragu'), ('Target_txt', 'murag'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 1), ('Target_img', 'Images/orange.jpg'), ('Trigger_img', 'Images/orange_pl.jpg')]), OrderedDict([('Trigger_txt', 'ranadu'), ('Target_txt', 'ranad'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 1), ('Target_img', 'Images/person.jpg'), ('Trigger_img', 'Images/person_pl.jpg')]), OrderedDict([('Trigger_txt', 'simadu'), ('Target_txt', 'simad'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 1), ('Target_img', 'Images/gun.jpg'), ('Trigger_img', 'Images/gun_pl.jpg')]), OrderedDict([('Trigger_txt', 'ranabu'), ('Target_txt', 'ranab'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 1), ('Target_img', 'Images/egg.jpg'), ('Trigger_img', 'Images/egg_pl.jpg')]), OrderedDict([('Trigger_txt', 'nunigu'), ('Target_txt', 'nunig'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 1), ('Target_img', 'Images/camera.jpg'), ('Trigger_img', 'Images/camera_pl.jpg')]), OrderedDict([('Trigger_txt', 'numidu'), ('Target_txt', 'numid'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 1), ('Target_img', 'Images/chair.jpg'), ('Trigger_img', 'Images/chair_pl.jpg')]), OrderedDict([('Trigger_txt', 'mirudu'), ('Target_txt', 'mirud'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 1), ('Target_img', 'Images/trumpet.jpg'), ('Trigger_img', 'Images/trumpet_pl.jpg')]), OrderedDict([('Trigger_txt', 'rinigu'), ('Target_txt', 'rinig'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 1), ('Target_img', 'Images/bus.jpg'), ('Trigger_img', 'Images/bus_pl.jpg')]), OrderedDict([('Trigger_txt', 'rarugu'), ('Target_txt', 'rarug'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 1), ('Target_img', 'Images/kite.jpg'), ('Trigger_img', 'Images/kite_pl.jpg')]), OrderedDict([('Trigger_txt', 'sunabu'), ('Target_txt', 'sunab'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 1), ('Target_img', 'Images/grill.jpg'), ('Trigger_img', 'Images/grill_pl.jpg')]), OrderedDict([('Trigger_txt', 'lamagu'), ('Target_txt', 'lamag'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 1), ('Target_img', 'Images/cage.jpg'), ('Trigger_img', 'Images/cage_pl.jpg')]), OrderedDict([('Trigger_txt', 'suludu'), ('Target_txt', 'sulud'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 1), ('Target_img', 'Images/bull-fighter.jpg'), ('Trigger_img', 'Images/bull-fighter_pl.jpg')]), OrderedDict([('Trigger_txt', 'maragu'), ('Target_txt', 'marag'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 1), ('Target_img', 'Images/moon.jpg'), ('Trigger_img', 'Images/moon_pl.jpg')]), OrderedDict([('Trigger_txt', 'musugu'), ('Target_txt', 'musug'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 1), ('Target_img', 'Images/yogurt.jpg'), ('Trigger_img', 'Images/yogurt_pl.jpg')]), OrderedDict([('Trigger_txt', 'minadu'), ('Target_txt', 'minad'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 1), ('Target_img', 'Images/basketball.jpg'), ('Trigger_img', 'Images/basketball_pl.jpg')]), OrderedDict([('Trigger_txt', 'suridu'), ('Target_txt', 'surid'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 1), ('Target_img', 'Images/meatball.jpg'), ('Trigger_img', 'Images/meatball_pl.jpg')]), OrderedDict([('Trigger_txt', 'malabu'), ('Target_txt', 'malab'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 1), ('Target_img', 'Images/macaroni.jpg'), ('Trigger_img', 'Images/macaroni_pl.jpg')]), OrderedDict([('Trigger_txt', 'saludu'), ('Target_txt', 'salud'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 1), ('Target_img', 'Images/teddy-bear.jpg'), ('Trigger_img', 'Images/teddy-bear_pl.jpg')]), OrderedDict([('Trigger_txt', 'manubu'), ('Target_txt', 'manub'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 1), ('Target_img', 'Images/belt.jpg'), ('Trigger_img', 'Images/belt_pl.jpg')]), OrderedDict([('Trigger_txt', 'rinugu'), ('Target_txt', 'rinug'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 1), ('Target_img', 'Images/whale.jpg'), ('Trigger_img', 'Images/whale_pl.jpg')]), OrderedDict([('Trigger_txt', 'mimigu'), ('Target_txt', 'mimig'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 1), ('Target_img', 'Images/bench.jpg'), ('Trigger_img', 'Images/bench_pl.jpg')]), OrderedDict([('Trigger_txt', 'rusidu'), ('Target_txt', 'rusid'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 1), ('Target_img', 'Images/canon.jpg'), ('Trigger_img', 'Images/canon_pl.jpg')]), OrderedDict([('Trigger_txt', 'lusadu'), ('Target_txt', 'lusad'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 1), ('Target_img', 'Images/helicopter.jpg'), ('Trigger_img', 'Images/helicopter_pl.jpg')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="Lists\Prod_voicing.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="trials_2" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="Test_Prod"/>
    <Routine name="ISI_1sec"/>
    <LoopTerminator name="trials_2"/>
    <Routine name="Instruction_FC"/>
    <LoopInitiator loopType="TrialHandler" name="trials_3">
      <Param name="Selected rows" updates="None" val="0:4" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('Trigger_txt', 'musapu'), ('Corr', 'musab'), ('Incorr', 'musap'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/apple.jpg'), ('Trigger_img', 'Images/apple_pl.jpg')]), OrderedDict([('Trigger_txt', 'larupu'), ('Corr', 'larub'), ('Incorr', 'larup'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/rock.jpg'), ('Trigger_img', 'Images/rock_pl.jpg')]), OrderedDict([('Trigger_txt', 'rumutu'), ('Corr', 'rumud'), ('Incorr', 'rumut'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/river.jpg'), ('Trigger_img', 'Images/river_pl.jpg')]), OrderedDict([('Trigger_txt', 'limiku'), ('Corr', 'limig'), ('Incorr', 'limik'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/screwdriver.jpg'), ('Trigger_img', 'Images/screwdriver_pl.jpg')]), OrderedDict([('Trigger_txt', 'nalipu'), ('Corr', 'nalib'), ('Incorr', 'nalip'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/coin.jpg'), ('Trigger_img', 'Images/coin_pl.jpg')]), OrderedDict([('Trigger_txt', 'ranutu'), ('Corr', 'ranud'), ('Incorr', 'ranut'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/carpet.jpg'), ('Trigger_img', 'Images/carpet_pl.jpg')]), OrderedDict([('Trigger_txt', 'rimuku'), ('Corr', 'rimug'), ('Incorr', 'rimuk'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/door.jpg'), ('Trigger_img', 'Images/door_pl.jpg')]), OrderedDict([('Trigger_txt', 'sunaku'), ('Corr', 'sunag'), ('Incorr', 'sunak'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/nose.jpg'), ('Trigger_img', 'Images/nose_pl.jpg')]), OrderedDict([('Trigger_txt', 'rinaku'), ('Corr', 'rinag'), ('Incorr', 'rinak'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/pen.jpg'), ('Trigger_img', 'Images/pen_pl.jpg')]), OrderedDict([('Trigger_txt', 'lunitu'), ('Corr', 'lunid'), ('Incorr', 'lunit'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/ship.jpg'), ('Trigger_img', 'Images/ship_pl.jpg')]), OrderedDict([('Trigger_txt', 'musatu'), ('Corr', 'musad'), ('Incorr', 'musat'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/foot.jpg'), ('Trigger_img', 'Images/foot_pl.jpg')]), OrderedDict([('Trigger_txt', 'milupu'), ('Corr', 'milub'), ('Incorr', 'milup'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/soap.jpg'), ('Trigger_img', 'Images/soap_pl.jpg')]), OrderedDict([('Trigger_txt', 'nuruku'), ('Corr', 'nurug'), ('Incorr', 'nuruk'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/clarinet.jpg'), ('Trigger_img', 'Images/clarinet_pl.jpg')]), OrderedDict([('Trigger_txt', 'rumapu'), ('Corr', 'rumab'), ('Incorr', 'rumap'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/soldier.jpg'), ('Trigger_img', 'Images/soldier_pl.jpg')]), OrderedDict([('Trigger_txt', 'nasapu'), ('Corr', 'nasab'), ('Incorr', 'nasap'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/spear.jpg'), ('Trigger_img', 'Images/spear_pl.jpg')]), OrderedDict([('Trigger_txt', 'nuratu'), ('Corr', 'nurad'), ('Incorr', 'nurat'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/copier.jpg'), ('Trigger_img', 'Images/copier_pl.jpg')]), OrderedDict([('Trigger_txt', 'sanupu'), ('Corr', 'sanub'), ('Incorr', 'sanup'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/hammock.jpg'), ('Trigger_img', 'Images/hammock_pl.jpg')]), OrderedDict([('Trigger_txt', 'sumaku'), ('Corr', 'sumag'), ('Incorr', 'sumak'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/maracas.jpg'), ('Trigger_img', 'Images/maracas_pl.jpg')]), OrderedDict([('Trigger_txt', 'minupu'), ('Corr', 'minub'), ('Incorr', 'minup'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/raindrop.jpg'), ('Trigger_img', 'Images/raindrop_pl.jpg')]), OrderedDict([('Trigger_txt', 'nimupu'), ('Corr', 'nimub'), ('Incorr', 'nimup'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/hand.jpg'), ('Trigger_img', 'Images/hand_pl.jpg')]), OrderedDict([('Trigger_txt', 'salitu'), ('Corr', 'salid'), ('Incorr', 'salit'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/balloon.jpg'), ('Trigger_img', 'Images/balloon_pl.jpg')]), OrderedDict([('Trigger_txt', 'milutu'), ('Corr', 'milud'), ('Incorr', 'milut'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/banana.jpg'), ('Trigger_img', 'Images/banana_pl.jpg')]), OrderedDict([('Trigger_txt', 'naritu'), ('Corr', 'narid'), ('Incorr', 'narit'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/squid.jpg'), ('Trigger_img', 'Images/squid_pl.jpg')]), OrderedDict([('Trigger_txt', 'liritu'), ('Corr', 'lirid'), ('Incorr', 'lirit'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/bridge.jpg'), ('Trigger_img', 'Images/bridge_pl.jpg')]), OrderedDict([('Trigger_txt', 'masitu'), ('Corr', 'masid'), ('Incorr', 'masit'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/thermometer.jpg'), ('Trigger_img', 'Images/thermometer_pl.jpg')]), OrderedDict([('Trigger_txt', 'rimaku'), ('Corr', 'rimag'), ('Incorr', 'rimak'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/bottle.jpg'), ('Trigger_img', 'Images/bottle_pl.jpg')]), OrderedDict([('Trigger_txt', 'silutu'), ('Corr', 'silud'), ('Incorr', 'silut'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/moustache.jpg'), ('Trigger_img', 'Images/moustache_pl.jpg')]), OrderedDict([('Trigger_txt', 'rimapu'), ('Corr', 'rimab'), ('Incorr', 'rimap'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/bean.jpg'), ('Trigger_img', 'Images/bean_pl.jpg')]), OrderedDict([('Trigger_txt', 'misapu'), ('Corr', 'misab'), ('Incorr', 'misap'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/rainbow.jpg'), ('Trigger_img', 'Images/rainbow_pl.jpg')]), OrderedDict([('Trigger_txt', 'lumutu'), ('Corr', 'lumud'), ('Incorr', 'lumut'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/knife.jpg'), ('Trigger_img', 'Images/knife_pl.jpg')]), OrderedDict([('Trigger_txt', 'mirapu'), ('Corr', 'mirab'), ('Incorr', 'mirap'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/hammer.jpg'), ('Trigger_img', 'Images/hammer_pl.jpg')]), OrderedDict([('Trigger_txt', 'namapu'), ('Corr', 'namab'), ('Incorr', 'namap'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/worm.jpg'), ('Trigger_img', 'Images/worm_pl.jpg')]), OrderedDict([('Trigger_txt', 'limipu'), ('Corr', 'limib'), ('Incorr', 'limip'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/ring.jpg'), ('Trigger_img', 'Images/ring_pl.jpg')]), OrderedDict([('Trigger_txt', 'niruku'), ('Corr', 'nirug'), ('Incorr', 'niruk'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/garbage_can.jpg'), ('Trigger_img', 'Images/garbage_can_pl.jpg')]), OrderedDict([('Trigger_txt', 'namaku'), ('Corr', 'namag'), ('Incorr', 'namak'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/anvil.jpg'), ('Trigger_img', 'Images/anvil_pl.jpg')]), OrderedDict([('Trigger_txt', 'runuku'), ('Corr', 'runug'), ('Incorr', 'runuk'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/cup.jpg'), ('Trigger_img', 'Images/cup_pl.jpg')]), OrderedDict([('Trigger_txt', 'silatu'), ('Corr', 'silad'), ('Incorr', 'silat'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/factory.jpg'), ('Trigger_img', 'Images/factory_pl.jpg')]), OrderedDict([('Trigger_txt', 'samuku'), ('Corr', 'samug'), ('Incorr', 'samuk'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/sleigh.jpg'), ('Trigger_img', 'Images/sleigh_pl.jpg')]), OrderedDict([('Trigger_txt', 'misuku'), ('Corr', 'misug'), ('Incorr', 'misuk'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/bell.jpg'), ('Trigger_img', 'Images/bell_pl.jpg')]), OrderedDict([('Trigger_txt', 'nirupu'), ('Corr', 'nirub'), ('Incorr', 'nirup'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/glove.jpg'), ('Trigger_img', 'Images/glove_pl.jpg')]), OrderedDict([('Trigger_txt', 'musupu'), ('Corr', 'musub'), ('Incorr', 'musup'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/dog.jpg'), ('Trigger_img', 'Images/dog_pl.jpg')]), OrderedDict([('Trigger_txt', 'susaku'), ('Corr', 'susag'), ('Incorr', 'susak'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/box.jpg'), ('Trigger_img', 'Images/box_pl.jpg')]), OrderedDict([('Trigger_txt', 'runiku'), ('Corr', 'runig'), ('Incorr', 'runik'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/shack.jpg'), ('Trigger_img', 'Images/shack_pl.jpg')]), OrderedDict([('Trigger_txt', 'saluku'), ('Corr', 'salug'), ('Incorr', 'saluk'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/thistle.jpg'), ('Trigger_img', 'Images/thistle_pl.jpg')]), OrderedDict([('Trigger_txt', 'sinapu'), ('Corr', 'sinab'), ('Incorr', 'sinap'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/tree.jpg'), ('Trigger_img', 'Images/tree_pl.jpg')]), OrderedDict([('Trigger_txt', 'rusuku'), ('Corr', 'rusug'), ('Incorr', 'rusuk'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 0), ('Target_img', 'Images/cat.jpg'), ('Trigger_img', 'Images/cat_pl.jpg')]), OrderedDict([('Trigger_txt', 'nirutu'), ('Corr', 'nirud'), ('Incorr', 'nirut'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/airplane.jpg'), ('Trigger_img', 'Images/airplane_pl.jpg')]), OrderedDict([('Trigger_txt', 'munipu'), ('Corr', 'munib'), ('Incorr', 'munip'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/calender.jpg'), ('Trigger_img', 'Images/calender_pl.jpg')]), OrderedDict([('Trigger_txt', 'murapu'), ('Corr', 'murab'), ('Incorr', 'murap'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/mouse.jpg'), ('Trigger_img', 'Images/mouse_pl.jpg')]), OrderedDict([('Trigger_txt', 'nalupu'), ('Corr', 'nalub'), ('Incorr', 'nalup'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/horse.jpg'), ('Trigger_img', 'Images/horse_pl.jpg')]), OrderedDict([('Trigger_txt', 'masapu'), ('Corr', 'masab'), ('Incorr', 'masap'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/chocolate_bar.jpg'), ('Trigger_img', 'Images/chocolate_bar_pl.jpg')]), OrderedDict([('Trigger_txt', 'misutu'), ('Corr', 'misud'), ('Incorr', 'misut'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/bicycle.jpg'), ('Trigger_img', 'Images/bicycle_pl.jpg')]), OrderedDict([('Trigger_txt', 'maniku'), ('Corr', 'manig'), ('Incorr', 'manik'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/hoover.jpg'), ('Trigger_img', 'Images/hoover_pl.jpg')]), OrderedDict([('Trigger_txt', 'lulutu'), ('Corr', 'lulud'), ('Incorr', 'lulut'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/shovel.jpg'), ('Trigger_img', 'Images/shovel_pl.jpg')]), OrderedDict([('Trigger_txt', 'lilitu'), ('Corr', 'lilid'), ('Incorr', 'lilit'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/hamburger.jpg'), ('Trigger_img', 'Images/hamburger_pl.jpg')]), OrderedDict([('Trigger_txt', 'runatu'), ('Corr', 'runad'), ('Incorr', 'runat'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/bag.jpg'), ('Trigger_img', 'Images/bag_pl.jpg')]), OrderedDict([('Trigger_txt', 'liliku'), ('Corr', 'lilig'), ('Incorr', 'lilik'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/feather.jpg'), ('Trigger_img', 'Images/feather_pl.jpg')]), OrderedDict([('Trigger_txt', 'rusipu'), ('Corr', 'rusib'), ('Incorr', 'rusip'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/duck.jpg'), ('Trigger_img', 'Images/duck_pl.jpg')]), OrderedDict([('Trigger_txt', 'lisaku'), ('Corr', 'lisag'), ('Incorr', 'lisak'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/flower.jpg'), ('Trigger_img', 'Images/flower_pl.jpg')]), OrderedDict([('Trigger_txt', 'susapu'), ('Corr', 'susab'), ('Incorr', 'susap'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/dolphin.jpg'), ('Trigger_img', 'Images/dolphin_pl.jpg')]), OrderedDict([('Trigger_txt', 'limutu'), ('Corr', 'limud'), ('Incorr', 'limut'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/tank.jpg'), ('Trigger_img', 'Images/tank_pl.jpg')]), OrderedDict([('Trigger_txt', 'niliku'), ('Corr', 'nilig'), ('Incorr', 'nilik'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/eye.jpg'), ('Trigger_img', 'Images/eye_pl.jpg')]), OrderedDict([('Trigger_txt', 'linaku'), ('Corr', 'linag'), ('Incorr', 'linak'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/skyscraper.jpg'), ('Trigger_img', 'Images/skyscraper_pl.jpg')]), OrderedDict([('Trigger_txt', 'malitu'), ('Corr', 'malid'), ('Incorr', 'malit'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/fork.jpg'), ('Trigger_img', 'Images/fork_pl.jpg')]), OrderedDict([('Trigger_txt', 'ninaku'), ('Corr', 'ninag'), ('Incorr', 'ninak'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/heart.jpg'), ('Trigger_img', 'Images/heart_pl.jpg')]), OrderedDict([('Trigger_txt', 'ranuku'), ('Corr', 'ranug'), ('Incorr', 'ranuk'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/pill.jpg'), ('Trigger_img', 'Images/pill_pl.jpg')]), OrderedDict([('Trigger_txt', 'maruku'), ('Corr', 'marug'), ('Incorr', 'rumat'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/mirror.jpg'), ('Trigger_img', 'Images/mirror_pl.jpg')]), OrderedDict([('Trigger_txt', 'risapu'), ('Corr', 'risab'), ('Incorr', 'misak'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/lightbulb.jpg'), ('Trigger_img', 'Images/lightbulb_pl.jpg')]), OrderedDict([('Trigger_txt', 'mulitu'), ('Corr', 'mulid'), ('Incorr', 'maruk'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/forklift.jpg'), ('Trigger_img', 'Images/forklift_pl.jpg')]), OrderedDict([('Trigger_txt', 'sunipu'), ('Corr', 'sunib'), ('Incorr', 'risap'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/seagull.jpg'), ('Trigger_img', 'Images/seagull_pl.jpg')]), OrderedDict([('Trigger_txt', 'saratu'), ('Corr', 'sarad'), ('Incorr', 'mulit'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/guitar.jpg'), ('Trigger_img', 'Images/guitar_pl.jpg')]), OrderedDict([('Trigger_txt', 'lusipu'), ('Corr', 'lusib'), ('Incorr', 'sunip'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/window.jpg'), ('Trigger_img', 'Images/window_pl.jpg')]), OrderedDict([('Trigger_txt', 'muriku'), ('Corr', 'murig'), ('Incorr', 'sarat'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/cow.jpg'), ('Trigger_img', 'Images/cow_pl.jpg')]), OrderedDict([('Trigger_txt', 'lasapu'), ('Corr', 'lasab'), ('Incorr', 'nisat'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/wig.jpg'), ('Trigger_img', 'Images/wig_pl.jpg')]), OrderedDict([('Trigger_txt', 'murupu'), ('Corr', 'murub'), ('Incorr', 'lusip'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/beer.jpg'), ('Trigger_img', 'Images/beer_pl.jpg')]), OrderedDict([('Trigger_txt', 'lanitu'), ('Corr', 'lanid'), ('Incorr', 'murik'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/helmet.jpg'), ('Trigger_img', 'Images/helmet_pl.jpg')]), OrderedDict([('Trigger_txt', 'ralatu'), ('Corr', 'ralad'), ('Incorr', 'lasap'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/magnifying_glass.jpg'), ('Trigger_img', 'Images/magnifying_glass_pl.jpg')]), OrderedDict([('Trigger_txt', 'nanatu'), ('Corr', 'nanad'), ('Incorr', 'murup'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/table.jpg'), ('Trigger_img', 'Images/table_pl.jpg')]), OrderedDict([('Trigger_txt', 'sanapu'), ('Corr', 'sanab'), ('Incorr', 'lanit'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/t-shirt.jpg'), ('Trigger_img', 'Images/t-shirt_pl.jpg')]), OrderedDict([('Trigger_txt', 'lanupu'), ('Corr', 'lanub'), ('Incorr', 'ralat'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/football.jpg'), ('Trigger_img', 'Images/football_pl.jpg')]), OrderedDict([('Trigger_txt', 'nimapu'), ('Corr', 'nimab'), ('Incorr', 'nanat'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/brick.jpg'), ('Trigger_img', 'Images/brick_pl.jpg')]), OrderedDict([('Trigger_txt', 'niripu'), ('Corr', 'nirib'), ('Incorr', 'sanap'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/newspaper.jpg'), ('Trigger_img', 'Images/newspaper_pl.jpg')]), OrderedDict([('Trigger_txt', 'nilapu'), ('Corr', 'nilab'), ('Incorr', 'lanup'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/mailbox.jpg'), ('Trigger_img', 'Images/mailbox_pl.jpg')]), OrderedDict([('Trigger_txt', 'ranipu'), ('Corr', 'ranib'), ('Incorr', 'nimap'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/peacock.jpg'), ('Trigger_img', 'Images/peacock_pl.jpg')]), OrderedDict([('Trigger_txt', 'mariku'), ('Corr', 'marig'), ('Incorr', 'nirip'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/doctor.jpg'), ('Trigger_img', 'Images/doctor_pl.jpg')]), OrderedDict([('Trigger_txt', 'lariku'), ('Corr', 'larig'), ('Incorr', 'nilap'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/priest.jpg'), ('Trigger_img', 'Images/priest_pl.jpg')]), OrderedDict([('Trigger_txt', 'lamiku'), ('Corr', 'lamig'), ('Incorr', 'ranip'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/submarine.jpg'), ('Trigger_img', 'Images/submarine_pl.jpg')]), OrderedDict([('Trigger_txt', 'siluku'), ('Corr', 'silug'), ('Incorr', 'marik'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/toe.jpg'), ('Trigger_img', 'Images/toe_pl.jpg')]), OrderedDict([('Trigger_txt', 'muruku'), ('Corr', 'murug'), ('Incorr', 'larik'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/shoe.jpg'), ('Trigger_img', 'Images/shoe_pl.jpg')]), OrderedDict([('Trigger_txt', 'rusapu'), ('Corr', 'rusab'), ('Incorr', 'lamik'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/blackboard.jpg'), ('Trigger_img', 'Images/blackboard_pl.jpg')]), OrderedDict([('Trigger_txt', 'rusaku'), ('Corr', 'rusag'), ('Incorr', 'nirik'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/radio.jpg'), ('Trigger_img', 'Images/radio_pl.jpg')]), OrderedDict([('Trigger_txt', 'miratu'), ('Corr', 'mirad'), ('Incorr', 'siluk'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/greenhouse.jpg'), ('Trigger_img', 'Images/greenhouse_pl.jpg')]), OrderedDict([('Trigger_txt', 'linatu'), ('Corr', 'linad'), ('Incorr', 'muruk'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/party.jpg Images/hat.jpg'), ('Trigger_img', 'Images/party_pl.jpg Images/hat_pl.jpg')]), OrderedDict([('Trigger_txt', 'mumitu'), ('Corr', 'mumid'), ('Incorr', 'rusap'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/loudspeaker.jpg'), ('Trigger_img', 'Images/loudspeaker_pl.jpg')]), OrderedDict([('Trigger_txt', 'marapu'), ('Corr', 'marab'), ('Incorr', 'rusak'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 0), ('Target_img', 'Images/plate.jpg'), ('Trigger_img', 'Images/plate_pl.jpg')]), OrderedDict([('Trigger_txt', 'rumidu'), ('Corr', 'rumid'), ('Incorr', 'mirat'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 1), ('Target_img', 'Images/mushroom.jpg'), ('Trigger_img', 'Images/mushroom_pl.jpg')]), OrderedDict([('Trigger_txt', 'lisudu'), ('Corr', 'lisud'), ('Incorr', 'linat'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 1), ('Target_img', 'Images/statue.jpg'), ('Trigger_img', 'Images/statue_pl.jpg')]), OrderedDict([('Trigger_txt', 'narabu'), ('Corr', 'narab'), ('Incorr', 'mumit'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 1), ('Target_img', 'Images/watch.jpg'), ('Trigger_img', 'Images/watch_pl.jpg')]), OrderedDict([('Trigger_txt', 'nulibu'), ('Corr', 'nulib'), ('Incorr', 'marap'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 1), ('Target_img', 'Images/computer.jpg'), ('Trigger_img', 'Images/computer_pl.jpg')]), OrderedDict([('Trigger_txt', 'nuragu'), ('Corr', 'nurag'), ('Incorr', 'rumuk'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 1), ('Target_img', 'Images/lion.jpg'), ('Trigger_img', 'Images/lion_pl.jpg')]), OrderedDict([('Trigger_txt', 'surudu'), ('Corr', 'surud'), ('Incorr', 'rumit'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 1), ('Target_img', 'Images/book.jpg'), ('Trigger_img', 'Images/book_pl.jpg')]), OrderedDict([('Trigger_txt', 'salibu'), ('Corr', 'salib'), ('Incorr', 'lisut'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 1), ('Target_img', 'Images/circle.jpg'), ('Trigger_img', 'Images/circle_pl.jpg')]), OrderedDict([('Trigger_txt', 'nunidu'), ('Corr', 'nunid'), ('Incorr', 'nulik'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 1), ('Target_img', 'Images/car.jpg'), ('Trigger_img', 'Images/car_pl.jpg')]), OrderedDict([('Trigger_txt', 'nanabu'), ('Corr', 'nanab'), ('Incorr', 'narap'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 1), ('Target_img', 'Images/sun.jpg'), ('Trigger_img', 'Images/sun_pl.jpg')]), OrderedDict([('Trigger_txt', 'sisubu'), ('Corr', 'sisub'), ('Incorr', 'nulip'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 1), ('Target_img', 'Images/pot.jpg'), ('Trigger_img', 'Images/pot_pl.jpg')]), OrderedDict([('Trigger_txt', 'sunudu'), ('Corr', 'sunud'), ('Incorr', 'nurak'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 1), ('Target_img', 'Images/flagpole.jpg'), ('Trigger_img', 'Images/flagpole_pl.jpg')]), OrderedDict([('Trigger_txt', 'numubu'), ('Corr', 'numub'), ('Incorr', 'surut'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 1), ('Target_img', 'Images/jacket.jpg'), ('Trigger_img', 'Images/jacket_pl.jpg')]), OrderedDict([('Trigger_txt', 'malugu'), ('Corr', 'malug'), ('Incorr', 'salip'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 1), ('Target_img', 'Images/necklace.jpg'), ('Trigger_img', 'Images/necklace_pl.jpg')]), OrderedDict([('Trigger_txt', 'lanibu'), ('Corr', 'lanib'), ('Incorr', 'nunit'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 1), ('Target_img', 'Images/bush.jpg'), ('Trigger_img', 'Images/bush_pl.jpg')]), OrderedDict([('Trigger_txt', 'sanagu'), ('Corr', 'sanag'), ('Incorr', 'nanap'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 1), ('Target_img', 'Images/fish.jpg'), ('Trigger_img', 'Images/fish_pl.jpg')]), OrderedDict([('Trigger_txt', 'mamadu'), ('Corr', 'mamad'), ('Incorr', 'sisup'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 1), ('Target_img', 'Images/ice-cream.jpg'), ('Trigger_img', 'Images/ice-cream_pl.jpg')]), OrderedDict([('Trigger_txt', 'nunugu'), ('Corr', 'nunug'), ('Incorr', 'sunut'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 1), ('Target_img', 'Images/zebra.jpg'), ('Trigger_img', 'Images/zebra_pl.jpg')]), OrderedDict([('Trigger_txt', 'misubu'), ('Corr', 'misub'), ('Incorr', 'numup'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 1), ('Target_img', 'Images/microphone.jpg'), ('Trigger_img', 'Images/microphone_pl.jpg')]), OrderedDict([('Trigger_txt', 'muragu'), ('Corr', 'murag'), ('Incorr', 'maluk'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 1), ('Target_img', 'Images/orange.jpg'), ('Trigger_img', 'Images/orange_pl.jpg')]), OrderedDict([('Trigger_txt', 'ranadu'), ('Corr', 'ranad'), ('Incorr', 'lanip'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 1), ('Target_img', 'Images/person.jpg'), ('Trigger_img', 'Images/person_pl.jpg')]), OrderedDict([('Trigger_txt', 'simadu'), ('Corr', 'simad'), ('Incorr', 'sanak'), ('Test_cond', 0), ('New_seg', 0), ('Filler', 1), ('Target_img', 'Images/gun.jpg'), ('Trigger_img', 'Images/gun_pl.jpg')]), OrderedDict([('Trigger_txt', 'ranabu'), ('Corr', 'ranab'), ('Incorr', 'mamat'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 1), ('Target_img', 'Images/egg.jpg'), ('Trigger_img', 'Images/egg_pl.jpg')]), OrderedDict([('Trigger_txt', 'nunigu'), ('Corr', 'nunig'), ('Incorr', 'nunuk'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 1), ('Target_img', 'Images/camera.jpg'), ('Trigger_img', 'Images/camera_pl.jpg')]), OrderedDict([('Trigger_txt', 'numidu'), ('Corr', 'numid'), ('Incorr', 'misup'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 1), ('Target_img', 'Images/chair.jpg'), ('Trigger_img', 'Images/chair_pl.jpg')]), OrderedDict([('Trigger_txt', 'mirudu'), ('Corr', 'mirud'), ('Incorr', 'salak'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 1), ('Target_img', 'Images/trumpet.jpg'), ('Trigger_img', 'Images/trumpet_pl.jpg')]), OrderedDict([('Trigger_txt', 'rinigu'), ('Corr', 'rinig'), ('Incorr', 'malup'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 1), ('Target_img', 'Images/bus.jpg'), ('Trigger_img', 'Images/bus_pl.jpg')]), OrderedDict([('Trigger_txt', 'rarugu'), ('Corr', 'rarug'), ('Incorr', 'murak'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 1), ('Target_img', 'Images/kite.jpg'), ('Trigger_img', 'Images/kite_pl.jpg')]), OrderedDict([('Trigger_txt', 'sunabu'), ('Corr', 'sunab'), ('Incorr', 'ranat'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 1), ('Target_img', 'Images/grill.jpg'), ('Trigger_img', 'Images/grill_pl.jpg')]), OrderedDict([('Trigger_txt', 'lamagu'), ('Corr', 'lamag'), ('Incorr', 'simat'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 1), ('Target_img', 'Images/cage.jpg'), ('Trigger_img', 'Images/cage_pl.jpg')]), OrderedDict([('Trigger_txt', 'suludu'), ('Corr', 'sulud'), ('Incorr', 'ranap'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 1), ('Target_img', 'Images/bull-fighter.jpg'), ('Trigger_img', 'Images/bull-fighter_pl.jpg')]), OrderedDict([('Trigger_txt', 'maragu'), ('Corr', 'marag'), ('Incorr', 'lilip'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 1), ('Target_img', 'Images/moon.jpg'), ('Trigger_img', 'Images/moon_pl.jpg')]), OrderedDict([('Trigger_txt', 'musugu'), ('Corr', 'musug'), ('Incorr', 'nunik'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 1), ('Target_img', 'Images/yogurt.jpg'), ('Trigger_img', 'Images/yogurt_pl.jpg')]), OrderedDict([('Trigger_txt', 'minadu'), ('Corr', 'minad'), ('Incorr', 'mulik'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 1), ('Target_img', 'Images/basketball.jpg'), ('Trigger_img', 'Images/basketball_pl.jpg')]), OrderedDict([('Trigger_txt', 'suridu'), ('Corr', 'surid'), ('Incorr', 'numit'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 1), ('Target_img', 'Images/meatball.jpg'), ('Trigger_img', 'Images/meatball_pl.jpg')]), OrderedDict([('Trigger_txt', 'malabu'), ('Corr', 'malab'), ('Incorr', 'mirut'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 1), ('Target_img', 'Images/macaroni.jpg'), ('Trigger_img', 'Images/macaroni_pl.jpg')]), OrderedDict([('Trigger_txt', 'saludu'), ('Corr', 'salud'), ('Incorr', 'rinik'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 1), ('Target_img', 'Images/teddy-bear.jpg'), ('Trigger_img', 'Images/teddy-bear_pl.jpg')]), OrderedDict([('Trigger_txt', 'manubu'), ('Corr', 'manub'), ('Incorr', 'raruk'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 1), ('Target_img', 'Images/belt.jpg'), ('Trigger_img', 'Images/belt_pl.jpg')]), OrderedDict([('Trigger_txt', 'rinugu'), ('Corr', 'rinug'), ('Incorr', 'sunap'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 1), ('Target_img', 'Images/whale.jpg'), ('Trigger_img', 'Images/whale_pl.jpg')]), OrderedDict([('Trigger_txt', 'mimigu'), ('Corr', 'mimig'), ('Incorr', 'lamak'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 1), ('Target_img', 'Images/bench.jpg'), ('Trigger_img', 'Images/bench_pl.jpg')]), OrderedDict([('Trigger_txt', 'rusidu'), ('Corr', 'rusid'), ('Incorr', 'sulut'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 1), ('Target_img', 'Images/canon.jpg'), ('Trigger_img', 'Images/canon_pl.jpg')]), OrderedDict([('Trigger_txt', 'lusadu'), ('Corr', 'lusad'), ('Incorr', 'nulat'), ('Test_cond', 0), ('New_seg', 1), ('Filler', 1), ('Target_img', 'Images/helicopter.jpg'), ('Trigger_img', 'Images/helicopter_pl.jpg')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="Lists\FC_voicing.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="trials_3" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="Test_FC"/>
    <Routine name="ISI_1sec"/>
    <LoopTerminator name="trials_3"/>
  </Flow>
</PsychoPy2experiment>
